<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Raven.Abstractions</name>
    </assembly>
    <members>
        <member name="T:Raven.Abstractions.Commands.DeleteCommandData">
            <summary>
            A single batch operation for a document DELETE
            </summary>
        </member>
        <member name="T:Raven.Abstractions.Commands.ICommandData">
            <summary>
            A single operation inside a batch
            </summary>
        </member>
        <member name="M:Raven.Abstractions.Commands.ICommandData.ToJson">
            <summary>
            Translate this instance to a Json object.
            </summary>
        </member>
        <member name="P:Raven.Abstractions.Commands.ICommandData.Key">
            <summary>
            Gets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Raven.Abstractions.Commands.ICommandData.Method">
            <summary>
            Gets the method.
            </summary>
            <value>The method.</value>
        </member>
        <member name="P:Raven.Abstractions.Commands.ICommandData.Etag">
            <summary>
            Gets the etag.
            </summary>
            <value>The etag.</value>
        </member>
        <member name="P:Raven.Abstractions.Commands.ICommandData.TransactionInformation">
            <summary>
            Gets the transaction information.
            </summary>
            <value>The transaction information.</value>
        </member>
        <member name="P:Raven.Abstractions.Commands.ICommandData.Metadata">
            <summary>
            Gets the metadata.
            </summary>
            <value>The metadata.</value>
        </member>
        <member name="M:Raven.Abstractions.Commands.DeleteCommandData.ToJson">
            <summary>
            Translate this instance to a Json object.
            </summary>
        </member>
        <member name="P:Raven.Abstractions.Commands.DeleteCommandData.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Raven.Abstractions.Commands.DeleteCommandData.Method">
            <summary>
            Gets the method.
            </summary>
            <value>The method.</value>
        </member>
        <member name="P:Raven.Abstractions.Commands.DeleteCommandData.Etag">
            <summary>
            Gets or sets the etag.
            </summary>
            <value>The etag.</value>
        </member>
        <member name="P:Raven.Abstractions.Commands.DeleteCommandData.TransactionInformation">
            <summary>
            Gets or sets the transaction information.
            </summary>
            <value>The transaction information.</value>
        </member>
        <member name="P:Raven.Abstractions.Commands.DeleteCommandData.Metadata">
            <summary>
            Gets or sets the metadata.
            </summary>
            <value>The metadata.</value>
        </member>
        <member name="T:Raven.Abstractions.Commands.PatchCommandData">
            <summary>
             A single batch operation for a document PATCH
            </summary>
        </member>
        <member name="M:Raven.Abstractions.Commands.PatchCommandData.ToJson">
            <summary>
            Translate this instance to a Json object.
            </summary>
        </member>
        <member name="P:Raven.Abstractions.Commands.PatchCommandData.Patches">
            <summary>
            Gets or sets the patches applied to this document
            </summary>
            <value>The patches.</value>
        </member>
        <member name="P:Raven.Abstractions.Commands.PatchCommandData.Key">
            <summary>
            Gets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Raven.Abstractions.Commands.PatchCommandData.Method">
            <summary>
            Gets the method.
            </summary>
            <value>The method.</value>
        </member>
        <member name="P:Raven.Abstractions.Commands.PatchCommandData.Etag">
            <summary>
            Gets or sets the etag.
            </summary>
            <value>The etag.</value>
        </member>
        <member name="P:Raven.Abstractions.Commands.PatchCommandData.TransactionInformation">
            <summary>
            Gets the transaction information.
            </summary>
            <value>The transaction information.</value>
        </member>
        <member name="P:Raven.Abstractions.Commands.PatchCommandData.Metadata">
            <summary>
            Gets or sets the metadata.
            </summary>
            <value>The metadata.</value>
        </member>
        <member name="T:Raven.Abstractions.Commands.PutCommandData">
            <summary>
            A single batch operation for a document PUT
            </summary>
        </member>
        <member name="M:Raven.Abstractions.Commands.PutCommandData.ToJson">
            <summary>
            Translate this instance to a Json object.
            </summary>
        </member>
        <member name="P:Raven.Abstractions.Commands.PutCommandData.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Raven.Abstractions.Commands.PutCommandData.Method">
            <summary>
            Gets the method.
            </summary>
            <value>The method.</value>
        </member>
        <member name="P:Raven.Abstractions.Commands.PutCommandData.Etag">
            <summary>
            Gets or sets the etag.
            </summary>
            <value>The etag.</value>
        </member>
        <member name="P:Raven.Abstractions.Commands.PutCommandData.Document">
            <summary>
            Gets or sets the document.
            </summary>
            <value>The document.</value>
        </member>
        <member name="P:Raven.Abstractions.Commands.PutCommandData.TransactionInformation">
            <summary>
            Gets the transaction information.
            </summary>
            <value>The transaction information.</value>
        </member>
        <member name="P:Raven.Abstractions.Commands.PutCommandData.Metadata">
            <summary>
            Gets or sets the metadata.
            </summary>
            <value>The metadata.</value>
        </member>
        <member name="T:Raven.Abstractions.Connection.WebResponseExtensions">
            <summary>
            Extensions for web requests
            </summary>
        </member>
        <member name="M:Raven.Abstractions.Connection.WebResponseExtensions.GetResponseStreamWithHttpDecompression(System.Net.WebResponse)">
            <summary>
            Gets the response stream with HTTP decompression.
            </summary>
            <param name="response">The response.</param>
            <returns></returns>
        </member>
        <member name="T:Raven.Abstractions.Data.Attachment">
            <summary>
            Attachment data and metadata
            </summary>
        </member>
        <member name="P:Raven.Abstractions.Data.Attachment.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="P:Raven.Abstractions.Data.Attachment.Size">
            <summary>
            The size of the attachment
            </summary>
        </member>
        <member name="P:Raven.Abstractions.Data.Attachment.Metadata">
            <summary>
            Gets or sets the metadata.
            </summary>
            <value>The metadata.</value>
        </member>
        <member name="P:Raven.Abstractions.Data.Attachment.Etag">
            <summary>
            Gets or sets the etag.
            </summary>
            <value>The etag.</value>
        </member>
        <member name="T:Raven.Abstractions.Data.BatchResult">
            <summary>
            The result of a single operation inside a batch
            </summary>
        </member>
        <member name="P:Raven.Abstractions.Data.BatchResult.Etag">
            <summary>
            Gets or sets the etag generated by the etag (if applicable)
            </summary>
            <value>The etag.</value>
        </member>
        <member name="P:Raven.Abstractions.Data.BatchResult.Method">
            <summary>
            Gets or sets the method used for the operation (PUT,DELETE,PATCH).
            </summary>
            <value>The method.</value>
        </member>
        <member name="P:Raven.Abstractions.Data.BatchResult.Key">
            <summary>
            Gets or sets the key of the document
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Raven.Abstractions.Data.BatchResult.Metadata">
            <summary>
            Gets or sets the updated metadata.
            </summary>
            <value>The metadata.</value>
        </member>
        <member name="M:Raven.Abstractions.Data.ConnectionStringParser`1.ProcessConnectionStringOption(System.Net.NetworkCredential,System.String,System.String)">
            <summary>
            Parse the connection string option
            </summary>
        </member>
        <member name="T:Raven.Abstractions.Data.IJsonDocumentMetadata">
            <summary>
            Interface that is used purely internally
            </summary>
        </member>
        <member name="P:Raven.Abstractions.Data.IJsonDocumentMetadata.Metadata">
            <summary>
            	Gets or sets the metadata for the document
            </summary>
            <value>The metadata.</value>
        </member>
        <member name="P:Raven.Abstractions.Data.IJsonDocumentMetadata.Key">
            <summary>
            	Gets or sets the key for the document
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Raven.Abstractions.Data.IJsonDocumentMetadata.NonAuthoritativeInformation">
            <summary>
            	Gets or sets a value indicating whether this document is non authoritative (modified by uncommitted transaction).
            </summary>
        </member>
        <member name="P:Raven.Abstractions.Data.IJsonDocumentMetadata.Etag">
            <summary>
            Gets or sets the etag.
            </summary>
            <value>The etag.</value>
        </member>
        <member name="P:Raven.Abstractions.Data.IJsonDocumentMetadata.LastModified">
            <summary>
            	Gets or sets the last modified date for the document
            </summary>
            <value>The last modified.</value>
        </member>
        <member name="T:Raven.Abstractions.Data.JsonDocument">
            <summary>
            A document representation:
            * Data / Projection
            * Etag
            * Metadata
            </summary>
        </member>
        <member name="M:Raven.Abstractions.Data.JsonDocument.#ctor">
            <summary>
            Create a new instance of JsonDocument
            </summary>
        </member>
        <member name="F:Raven.Abstractions.Data.JsonDocument.SerializedSizeOnDisk">
            <summary>
            How much space this document takes on disk
            Only relevant during indexing phases, and not available on the client
            </summary>
        </member>
        <member name="M:Raven.Abstractions.Data.JsonDocument.ToJson">
            <summary>
            Translate the json document to a <see cref="T:Raven.Json.Linq.RavenJObject"/>
            </summary>
            <returns></returns>
        </member>
        <member name="P:Raven.Abstractions.Data.JsonDocument.DataAsJson">
            <summary>
            Gets or sets the document data as json.
            </summary>
            <value>The data as json.</value>
        </member>
        <member name="P:Raven.Abstractions.Data.JsonDocument.Metadata">
            <summary>
            Gets or sets the metadata for the document
            </summary>
            <value>The metadata.</value>
        </member>
        <member name="P:Raven.Abstractions.Data.JsonDocument.Key">
            <summary>
            Gets or sets the key for the document
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Raven.Abstractions.Data.JsonDocument.NonAuthoritativeInformation">
            <summary>
            Gets or sets a value indicating whether this document is non authoritative (modified by uncommitted transaction).
            </summary>
        </member>
        <member name="P:Raven.Abstractions.Data.JsonDocument.Etag">
            <summary>
            Gets or sets the etag.
            </summary>
            <value>The etag.</value>
        </member>
        <member name="P:Raven.Abstractions.Data.JsonDocument.LastModified">
            <summary>
            Gets or sets the last modified date for the document
            </summary>
            <value>The last modified.</value>
        </member>
        <member name="T:Raven.Abstractions.Data.JsonDocumentMetadata">
            <summary>
            A document representation:
            * Etag
            * Metadata
            </summary>
        </member>
        <member name="P:Raven.Abstractions.Data.JsonDocumentMetadata.Metadata">
            <summary>
            	Gets or sets the metadata for the document
            </summary>
            <value>The metadata.</value>
        </member>
        <member name="P:Raven.Abstractions.Data.JsonDocumentMetadata.Key">
            <summary>
            	Gets or sets the key for the document
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Raven.Abstractions.Data.JsonDocumentMetadata.NonAuthoritativeInformation">
            <summary>
            	Gets or sets a value indicating whether this document is non authoritative (modified by uncommitted transaction).
            </summary>
        </member>
        <member name="P:Raven.Abstractions.Data.JsonDocumentMetadata.Etag">
            <summary>
            Gets or sets the etag.
            </summary>
            <value>The etag.</value>
        </member>
        <member name="P:Raven.Abstractions.Data.JsonDocumentMetadata.LastModified">
            <summary>
            	Gets or sets the last modified date for the document
            </summary>
            <value>The last modified.</value>
        </member>
        <member name="T:Raven.Abstractions.Data.MultiLoadResult">
            <summary>
            Represent a result which include both document results and included documents
            </summary>
        </member>
        <member name="M:Raven.Abstractions.Data.MultiLoadResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Abstractions.Data.MultiLoadResult"/> class.
            </summary>
        </member>
        <member name="P:Raven.Abstractions.Data.MultiLoadResult.Results">
            <summary>
            Gets or sets the document results.
            </summary>
        </member>
        <member name="P:Raven.Abstractions.Data.MultiLoadResult.Includes">
            <summary>
            Gets or sets the included documents
            </summary>
        </member>
        <member name="T:Raven.Abstractions.Data.PatchCommandType">
            <summary>
            Patch command options
            </summary>
        </member>
        <member name="F:Raven.Abstractions.Data.PatchCommandType.Set">
            <summary>
            Set a property
            </summary>
        </member>
        <member name="F:Raven.Abstractions.Data.PatchCommandType.Unset">
            <summary>
            Unset (remove) a property
            </summary>
        </member>
        <member name="F:Raven.Abstractions.Data.PatchCommandType.Add">
            <summary>
            Add an item to an array
            </summary>
        </member>
        <member name="F:Raven.Abstractions.Data.PatchCommandType.Insert">
            <summary>
            Insert an item to an array at a specified position
            </summary>
        </member>
        <member name="F:Raven.Abstractions.Data.PatchCommandType.Remove">
            <summary>
            Remove an item from an array at a specified position
            </summary>
        </member>
        <member name="F:Raven.Abstractions.Data.PatchCommandType.Modify">
            <summary>
            Modify a property value by providing a nested set of patch operation
            </summary>
        </member>
        <member name="F:Raven.Abstractions.Data.PatchCommandType.Inc">
            <summary>
            Increment a property by a specified value
            </summary>
        </member>
        <member name="F:Raven.Abstractions.Data.PatchCommandType.Copy">
            <summary>
            Copy a property value to another property
            </summary>
        </member>
        <member name="F:Raven.Abstractions.Data.PatchCommandType.Rename">
            <summary>
            Rename a property
            </summary>
        </member>
        <member name="T:Raven.Abstractions.Data.PatchRequest">
            <summary>
            A patch request for a specified document
            </summary>
        </member>
        <member name="M:Raven.Abstractions.Data.PatchRequest.ToJson">
            <summary>
            Translate this instance to json
            </summary>
        </member>
        <member name="M:Raven.Abstractions.Data.PatchRequest.FromJson(Raven.Json.Linq.RavenJObject)">
            <summary>
            Create an instance from a json object
            </summary>
            <param name="patchRequestJson">The patch request json.</param>
        </member>
        <member name="P:Raven.Abstractions.Data.PatchRequest.Type">
            <summary>
            Gets or sets the type of the operation
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Raven.Abstractions.Data.PatchRequest.PrevVal">
            <summary>
            Gets or sets the previous value, which is compared against the current value to verify a
            change isn't overwriting new values.
            If the value is null, the operation is always successful
            </summary>
            <value>The previous value.</value>
        </member>
        <member name="P:Raven.Abstractions.Data.PatchRequest.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Raven.Abstractions.Data.PatchRequest.Nested">
            <summary>
            Gets or sets the nested operations to perform. This is only valid when the <see cref="P:Raven.Abstractions.Data.PatchRequest.Type"/> is <see cref="F:Raven.Abstractions.Data.PatchCommandType.Modify"/>.
            </summary>
            <value>The nested.</value>
        </member>
        <member name="P:Raven.Abstractions.Data.PatchRequest.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Raven.Abstractions.Data.PatchRequest.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>The position.</value>
        </member>
        <member name="P:Raven.Abstractions.Data.PatchRequest.AllPositions">
            <summary>
            Get or sets AllPositions. Set this property to true if you want to modify all items in an collection.
            </summary>
            <value>AllPositions true/false</value>
        </member>
        <member name="T:Raven.Abstractions.Data.PatchResult">
            <summary>
            The result of a patch operation
            </summary>
        </member>
        <member name="F:Raven.Abstractions.Data.PatchResult.DocumentDoesNotExists">
            <summary>
            The document does not exists, operation was a no-op
            </summary>
        </member>
        <member name="F:Raven.Abstractions.Data.PatchResult.Patched">
            <summary>
            Document was properly patched
            </summary>
        </member>
        <member name="T:Raven.Abstractions.Data.PutResult">
            <summary>
            The result of a PUT operation
            </summary>
        </member>
        <member name="P:Raven.Abstractions.Data.PutResult.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Raven.Abstractions.Data.PutResult.ETag">
            <summary>
            Gets or sets the generated Etag for the PUT operation
            </summary>
            <value>The Etag.</value>
        </member>
        <member name="T:Raven.Abstractions.Data.SortedField">
            <summary>
            Represent a field sort options
            </summary>
        </member>
        <member name="M:Raven.Abstractions.Data.SortedField.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Abstractions.Data.SortedField"/> class.
            </summary>
            <param name="fieldWithPotentialPrefix">The field with potential prefix.</param>
        </member>
        <member name="P:Raven.Abstractions.Data.SortedField.Field">
            <summary>
            Gets or sets the field.
            </summary>
            <value>The field.</value>
        </member>
        <member name="P:Raven.Abstractions.Data.SortedField.Descending">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Raven.Abstractions.Data.SortedField"/> is descending.
            </summary>
            <value><c>true</c> if descending; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Raven.Abstractions.Data.SpatialIndexQuery">
            <summary>
            A query using spatial filtering
            </summary>
        </member>
        <member name="T:Raven.Abstractions.Data.IndexQuery">
            <summary>
            All the information required to query a Raven index
            </summary>
        </member>
        <member name="M:Raven.Abstractions.Data.IndexQuery.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Abstractions.Data.IndexQuery"/> class.
            </summary>
        </member>
        <member name="M:Raven.Abstractions.Data.IndexQuery.GetIndexQueryUrl(System.String,System.String,System.String)">
            <summary>
            Gets the index query URL.
            </summary>
            <param name="operationUrl">The operation URL.</param>
            <param name="index">The index.</param>
            <param name="operationName">Name of the operation.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Abstractions.Data.IndexQuery.GetCustomQueryStringVariables">
            <summary>
            Gets the custom query string variables.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Raven.Abstractions.Data.IndexQuery.Query">
            <summary>
            Gets or sets the query.
            </summary>
            <value>The query.</value>
        </member>
        <member name="P:Raven.Abstractions.Data.IndexQuery.TotalSize">
            <summary>
            Gets or sets the total size.
            </summary>
            <value>The total size.</value>
        </member>
        <member name="P:Raven.Abstractions.Data.IndexQuery.Start">
            <summary>
            Gets or sets the start of records to read.
            </summary>
            <value>The start.</value>
        </member>
        <member name="P:Raven.Abstractions.Data.IndexQuery.PageSize">
            <summary>
            Gets or sets the size of the page.
            </summary>
            <value>The size of the page.</value>
        </member>
        <member name="P:Raven.Abstractions.Data.IndexQuery.AggregationOperation">
            <summary>
            The aggregation operation for this query
            </summary>
        </member>
        <member name="P:Raven.Abstractions.Data.IndexQuery.GroupBy">
            <summary>
            The fields to group the query by
            </summary>
        </member>
        <member name="P:Raven.Abstractions.Data.IndexQuery.FieldsToFetch">
            <summary>
            Gets or sets the fields to fetch.
            </summary>
            <value>The fields to fetch.</value>
        </member>
        <member name="P:Raven.Abstractions.Data.IndexQuery.SortedFields">
            <summary>
            Gets or sets the fields to sort by
            </summary>
            <value>The sorted fields.</value>
        </member>
        <member name="P:Raven.Abstractions.Data.IndexQuery.Cutoff">
            <summary>
            Gets or sets the cutoff date
            </summary>
            <value>The cutoff.</value>
        </member>
        <member name="P:Raven.Abstractions.Data.IndexQuery.CutoffEtag">
            <summary>
            Gets or sets the cutoff etag
            </summary>
            <remarks>
            Cutoff etag is used to check if the index has already process a document with the given
            etag. Unlike Cutoff, which uses dates and is susceptible to clock syncronization issues between
            machines, cutoff etag doesn't rely on both the server and client having a syncronized clock and 
            can work without it.
            However, when used to query map/reduce indexes, it does NOT guarantee that the document that this
            etag belong to is actually considered for the results. 
            What it does it guarantee that the document has been mapped, but not that the mapped values has been reduce. 
            Since map/reduce queries, by their nature,tend to be far less susceptible to issues with staleness, this is 
            considered to be an acceptable tradeoff.
            If you need absolute no staleness with a map/reduce index, you will need to ensure syncronized clocks and 
            use the Cutoff date option, instead.
            </remarks>
        </member>
        <member name="P:Raven.Abstractions.Data.IndexQuery.DefaultField">
            <summary>
            The default field to use when querying directly on the Lucene query
            </summary>
        </member>
        <member name="P:Raven.Abstractions.Data.IndexQuery.SkipTransformResults">
            <summary>
            If set to true, RavenDB won't execute the transform results function
            returning just the raw results instead
            </summary>
        </member>
        <member name="P:Raven.Abstractions.Data.IndexQuery.SkippedResults">
            <summary>
            Gets or sets the number of skipped results.
            </summary>
            <value>The skipped results.</value>
        </member>
        <member name="M:Raven.Abstractions.Data.SpatialIndexQuery.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Abstractions.Data.SpatialIndexQuery"/> class.
            </summary>
        </member>
        <member name="M:Raven.Abstractions.Data.SpatialIndexQuery.#ctor(Raven.Abstractions.Data.IndexQuery)">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Abstractions.Data.SpatialIndexQuery"/> class.
            </summary>
            <param name="query">The query.</param>
        </member>
        <member name="M:Raven.Abstractions.Data.SpatialIndexQuery.GetCustomQueryStringVariables">
            <summary>
            Gets the custom query string variables.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Raven.Abstractions.Data.SpatialIndexQuery.Latitude">
            <summary>
            Gets or sets the latitude.
            </summary>
            <value>The latitude.</value>
        </member>
        <member name="P:Raven.Abstractions.Data.SpatialIndexQuery.Longitude">
            <summary>
            Gets or sets the longitude.
            </summary>
            <value>The longitude.</value>
        </member>
        <member name="P:Raven.Abstractions.Data.SpatialIndexQuery.Radius">
            <summary>
            Gets or sets the radius.
            </summary>
            <value>The radius, in miles.</value>
        </member>
        <member name="T:Raven.Abstractions.Data.StringDistanceTypes">
            <summary>
            String distance algorithms used in suggestion query
            </summary>
        </member>
        <member name="F:Raven.Abstractions.Data.StringDistanceTypes.Default">
            <summary>
            Default, equivalent to Levenshtein
            </summary>
        </member>
        <member name="F:Raven.Abstractions.Data.StringDistanceTypes.JaroWinkler">
            <summary>
            JaroWinkler distance algorithm
            </summary>
        </member>
        <member name="F:Raven.Abstractions.Data.StringDistanceTypes.Levenshtein">
            <summary>
            Levenshtein distance algorithm (default)
            </summary>
        </member>
        <member name="F:Raven.Abstractions.Data.StringDistanceTypes.NGram">
            <summary>
            NGram distance algorithm
            </summary>
        </member>
        <member name="T:Raven.Abstractions.Data.SuggestionQuery">
            <summary>
            
            </summary>
        </member>
        <member name="M:Raven.Abstractions.Data.SuggestionQuery.#ctor">
            <summary>
            Create a new instance of <seealso cref="T:Raven.Abstractions.Data.SuggestionQuery"/>
            </summary>
        </member>
        <member name="P:Raven.Abstractions.Data.SuggestionQuery.Term">
            <summary>
            Gets or sets the term. The term is what the user likely entered, and will used as the basis of the suggestions.
            </summary>
            <value>The term.</value>
        </member>
        <member name="P:Raven.Abstractions.Data.SuggestionQuery.Field">
            <summary>
            Gets or sets the field to be used in conjunction with the index.
            </summary>
            <value>The field.</value>
        </member>
        <member name="P:Raven.Abstractions.Data.SuggestionQuery.MaxSuggestions">
            <summary>
            Gets or sets the number of suggestions to return.
            </summary>
            <value>The number of suggestions.</value>
        </member>
        <member name="P:Raven.Abstractions.Data.SuggestionQuery.Distance">
            <summary>
            Gets or sets the string distance algorithm.
            </summary>
            <value>The distance.</value>
        </member>
        <member name="P:Raven.Abstractions.Data.SuggestionQuery.Accuracy">
            <summary>
            Gets or sets the accuracy.
            </summary>
            <value>The accuracy.</value>
        </member>
        <member name="T:Raven.Abstractions.Data.SuggestionQueryResult">
            <summary>
            The result of the suggestion query
            </summary>
        </member>
        <member name="P:Raven.Abstractions.Data.SuggestionQueryResult.Suggestions">
            <summary>
            The suggestions based on the term and dictionary
            </summary>
            <value>The suggestions.</value>
        </member>
        <member name="T:Raven.Abstractions.Data.TransactionInformation">
            <summary>
            Transaction information that identify the transaction id and timeout
            </summary>
        </member>
        <member name="P:Raven.Abstractions.Data.TransactionInformation.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:Raven.Abstractions.Data.TransactionInformation.Timeout">
            <summary>
            Gets or sets the timeout.
            </summary>
            <value>The timeout.</value>
        </member>
        <member name="T:Raven.Abstractions.Extensions.ExceptionExtensions">
            <summary>
             Extension methods to handle common scenarios
            </summary>
        </member>
        <member name="M:Raven.Abstractions.Extensions.ExceptionExtensions.ExtractSingleInnerException(System.AggregateException)">
            <summary>
            Recursively examines the inner exceptions of an <see cref="T:System.AggregateException"/> and returns a single child exception.
            </summary>
            <returns>
            If any of the aggregated exceptions have more than one inner exception, null is returned.
            </returns>
        </member>
        <member name="M:Raven.Abstractions.Extensions.ExceptionExtensions.SimplifyError(System.Exception)">
            <summary>
            Extracts a portion of an exception for a user friendly display
            </summary>
            <param name="e">The exception.</param>
            <returns>The primary portion of the exception message.</returns>
        </member>
        <member name="T:Raven.Abstractions.Exceptions.ConcurrencyException">
            <summary>
            This exception is raised when a concurrency conflict is encountered
            </summary>
        </member>
        <member name="M:Raven.Abstractions.Exceptions.ConcurrencyException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Abstractions.Exceptions.ConcurrencyException"/> class.
            </summary>
        </member>
        <member name="M:Raven.Abstractions.Exceptions.ConcurrencyException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Abstractions.Exceptions.ConcurrencyException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Raven.Abstractions.Exceptions.ConcurrencyException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Abstractions.Exceptions.ConcurrencyException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="P:Raven.Abstractions.Exceptions.ConcurrencyException.ExpectedETag">
            <summary>
            Gets or sets the expected E tag.
            </summary>
            <value>The expected E tag.</value>
        </member>
        <member name="P:Raven.Abstractions.Exceptions.ConcurrencyException.ActualETag">
            <summary>
            Gets or sets the actual E tag.
            </summary>
            <value>The actual E tag.</value>
        </member>
        <member name="T:Raven.Abstractions.Extensions.DisposableAction">
            <summary>
            A helper class that translate between Disposable and Action
            </summary>
        </member>
        <member name="M:Raven.Abstractions.Extensions.DisposableAction.#ctor(System.Action)">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Abstractions.Extensions.DisposableAction"/> class.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:Raven.Abstractions.Extensions.DisposableAction.Dispose">
            <summary>
            Execute the relevant actions
            </summary>
        </member>
        <member name="T:Raven.Abstractions.Extensions.ExpressionExtensions">
            <summary>
             Extensions for Linq expressions
            </summary>
        </member>
        <member name="M:Raven.Abstractions.Extensions.ExpressionExtensions.ToPropertyPath``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
            <summary>
             Turn an expression like x=&lt; x.User.Name to "User.Name"
            </summary>
        </member>
        <member name="T:Raven.Abstractions.Extensions.JsonExtensions">
            <summary>
            Json extensions 
            </summary>
        </member>
        <member name="M:Raven.Abstractions.Extensions.JsonExtensions.ToJObject(System.Byte[])">
            <summary>
            Convert a byte array to a RavenJObject
            </summary>
        </member>
        <member name="M:Raven.Abstractions.Extensions.JsonExtensions.ToJObject(System.IO.Stream)">
            <summary>
            Convert a byte array to a RavenJObject
            </summary>
        </member>
        <member name="M:Raven.Abstractions.Extensions.JsonExtensions.WriteTo(Raven.Json.Linq.RavenJToken,System.IO.Stream)">
            <summary>
            Convert a RavenJToken to a byte array
            </summary>
        </member>
        <member name="M:Raven.Abstractions.Extensions.JsonExtensions.JsonDeserialization``1(System.Byte[])">
            <summary>
            Deserialize a <param name="self"/> to an instance of <typeparam name="T"/>
            </summary>
        </member>
        <member name="M:Raven.Abstractions.Extensions.JsonExtensions.JsonDeserialization``1(Raven.Json.Linq.RavenJObject)">
            <summary>
            Deserialize a <param name="self"/> to an instance of<typeparam name="T"/>
            </summary>
        </member>
        <member name="M:Raven.Abstractions.Extensions.JsonExtensions.JsonDeserialization``1(System.IO.StreamReader)">
            <summary>
            Deserialize a <param name="self"/> to an instance of<typeparam name="T"/>
            </summary>
        </member>
        <member name="M:Raven.Json.Linq.Extensions.Value``1(System.Collections.Generic.IEnumerable{Raven.Json.Linq.RavenJToken})">
            <summary>
            Converts the value.
            </summary>
            <typeparam name="U">The type to convert the value to.</typeparam>
            <param name="value">A <see cref="T:Raven.Json.Linq.RavenJToken"/> cast as a <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:Raven.Json.Linq.RavenJToken"/>.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="M:Raven.Json.Linq.Extensions.Value``2(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Converts the value.
            </summary>
            <typeparam name="T">The source collection type.</typeparam>
            <typeparam name="U">The type to convert the value to.</typeparam>
            <param name="value">A <see cref="T:Raven.Json.Linq.RavenJToken"/> cast as a <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:Raven.Json.Linq.RavenJToken"/>.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="M:Raven.Json.Linq.Extensions.Values``1(System.Collections.Generic.IEnumerable{Raven.Json.Linq.RavenJToken})">
            <summary>
            Returns a collection of converted child values of every object in the source collection.
            </summary>
            <typeparam name="U">The type to convert the values to.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:Raven.Json.Linq.RavenJToken"/> that contains the source collection.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> that contains the converted values of every node in the source collection.</returns>
        </member>
        <member name="M:Raven.Json.Linq.Extensions.Values(System.Collections.Generic.IEnumerable{Raven.Json.Linq.RavenJToken},System.String)">
            <summary>
            Returns a collection of child values of every object in the source collection with the given key.
            </summary>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:Raven.Json.Linq.RavenJToken"/> that contains the source collection.</param>
            <param name="key">The token key.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:Raven.Json.Linq.RavenJToken"/> that contains the values of every node in the source collection with the given key.</returns>
        </member>
        <member name="M:Raven.Json.Linq.Extensions.Values(System.Collections.Generic.IEnumerable{Raven.Json.Linq.RavenJToken})">
            <summary>
            Returns a collection of child values of every object in the source collection.
            </summary>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:Raven.Json.Linq.RavenJToken"/> that contains the source collection.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:Raven.Json.Linq.RavenJToken"/> that contains the values of every node in the source collection.</returns>
        </member>
        <member name="T:Raven.Json.Linq.RavenJArray">
            <summary>
            Represents a JSON array.
            </summary>
        </member>
        <member name="T:Raven.Json.Linq.RavenJToken">
            <summary>
            Represents an abstract JSON token.
            </summary>
        </member>
        <member name="M:Raven.Json.Linq.RavenJToken.CloneToken">
            <summary>
            Clones this object
            </summary>
            <returns>A cloned RavenJToken</returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJToken.FromObject(System.Object)">
            <summary>
            Creates a <see cref="T:Raven.Json.Linq.RavenJToken"/> from an object.
            </summary>
            <param name="o">The object that will be used to create <see cref="T:Raven.Json.Linq.RavenJToken"/>.</param>
            <returns>A <see cref="T:Raven.Json.Linq.RavenJToken"/> with the value of the specified object</returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJToken.FromObject(System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Creates a <see cref="T:Raven.Json.Linq.RavenJToken"/> from an object using the specified <see cref="T:Newtonsoft.Json.JsonSerializer"/>.
            </summary>
            <param name="o">The object that will be used to create <see cref="T:Raven.Json.Linq.RavenJToken"/>.</param>
            <param name="jsonSerializer">The <see cref="T:Newtonsoft.Json.JsonSerializer"/> that will be used when reading the object.</param>
            <returns>A <see cref="T:Raven.Json.Linq.RavenJToken"/> with the value of the specified object</returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJToken.ToString">
            <summary>
            Returns the indented JSON for this token.
            </summary>
            <returns>
            The indented JSON for this token.
            </returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJToken.ToString(Newtonsoft.Json.Formatting,Newtonsoft.Json.JsonConverter[])">
            <summary>
            Returns the JSON for this token using the given formatting and converters.
            </summary>
            <param name="formatting">Indicates how the output is formatted.</param>
            <param name="converters">A collection of <see cref="T:Newtonsoft.Json.JsonConverter"/> which will be used when writing the token.</param>
            <returns>The JSON for this token using the given formatting and converters.</returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJToken.WriteTo(Newtonsoft.Json.JsonWriter,Newtonsoft.Json.JsonConverter[])">
            <summary>
            Writes this token to a <see cref="T:Newtonsoft.Json.JsonWriter"/>.
            </summary>
            <param name="writer">A <see cref="T:Newtonsoft.Json.JsonWriter"/> into which this method will write.</param>
            <param name="converters">A collection of <see cref="T:Newtonsoft.Json.JsonConverter"/> which will be used when writing the token.</param>
        </member>
        <member name="M:Raven.Json.Linq.RavenJToken.ReadFrom(Newtonsoft.Json.JsonReader)">
            <summary>
            Creates a <see cref="T:Raven.Json.Linq.RavenJToken"/> from a <see cref="T:Newtonsoft.Json.JsonReader"/>.
            </summary>
            <param name="reader">An <see cref="T:Newtonsoft.Json.JsonReader"/> positioned at the token to read into this <see cref="T:Raven.Json.Linq.RavenJToken"/>.</param>
            <returns>
            An <see cref="T:Raven.Json.Linq.RavenJToken"/> that contains the token and its descendant tokens
            that were read from the reader. The runtime type of the token is determined
            by the token type of the first token encountered in the reader.
            </returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJToken.Parse(System.String)">
            <summary>
            Load a <see cref="T:Raven.Json.Linq.RavenJToken"/> from a string that contains JSON.
            </summary>
            <param name="json">A <see cref="T:System.String"/> that contains JSON.</param>
            <returns>A <see cref="T:Raven.Json.Linq.RavenJToken"/> populated from the string that contains JSON.</returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJToken.Load(Newtonsoft.Json.JsonReader)">
            <summary>
            Creates a <see cref="T:Raven.Json.Linq.RavenJToken"/> from a <see cref="T:Newtonsoft.Json.JsonReader"/>.
            </summary>
            <param name="reader">An <see cref="T:Newtonsoft.Json.JsonReader"/> positioned at the token to read into this <see cref="T:Raven.Json.Linq.RavenJToken"/>.</param>
            <returns>
            An <see cref="T:Raven.Json.Linq.RavenJToken"/> that contains the token and its descendant tokens
            that were read from the reader. The runtime type of the token is determined
            by the token type of the first token encountered in the reader.
            </returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJToken.Value``1(System.String)">
            <summary>
            Gets the <see cref="T:Raven.Json.Linq.RavenJToken"/> with the specified key converted to the specified type.
            </summary>
            <typeparam name="T">The type to convert the token to.</typeparam>
            <param name="key">The token key.</param>
            <returns>The converted token value.</returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJToken.DeepEquals(Raven.Json.Linq.RavenJToken,Raven.Json.Linq.RavenJToken)">
            <summary>
            Compares the values of two tokens, including the values of all descendant tokens.
            </summary>
            <param name="t1">The first <see cref="T:Raven.Json.Linq.RavenJToken"/> to compare.</param>
            <param name="t2">The second <see cref="T:Raven.Json.Linq.RavenJToken"/> to compare.</param>
            <returns>true if the tokens are equal; otherwise false.</returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJToken.SelectToken(System.String)">
            <summary>
            Selects the token that matches the object path.
            </summary>
            <param name="path">
            The object path from the current <see cref="T:Raven.Json.Linq.RavenJToken"/> to the <see cref="T:Raven.Json.Linq.RavenJToken"/>
            to be returned. This must be a string of property names or array indexes separated
            by periods, such as <code>Tables[0].DefaultView[0].Price</code> in C# or
            <code>Tables(0).DefaultView(0).Price</code> in Visual Basic.
            </param>
            <returns>The <see cref="T:Raven.Json.Linq.RavenJToken"/> that matches the object path or a null reference if no matching token is found.</returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJToken.SelectToken(System.String,System.Boolean)">
            <summary>
            Selects the token that matches the object path.
            </summary>
            <param name="path">
            The object path from the current <see cref="T:Raven.Json.Linq.RavenJToken"/> to the <see cref="T:Raven.Json.Linq.RavenJToken"/>
            to be returned. This must be a string of property names or array indexes separated
            by periods, such as <code>Tables[0].DefaultView[0].Price</code> in C# or
            <code>Tables(0).DefaultView(0).Price</code> in Visual Basic.
            </param>
            <param name="errorWhenNoMatch">A flag to indicate whether an error should be thrown if no token is found.</param>
            <returns>The <see cref="T:Raven.Json.Linq.RavenJToken"/> that matches the object path.</returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJToken.Values``1">
            <summary>
            Returns a collection of the child values of this token, in document order.
            </summary>
            <typeparam name="T">The type to convert the values to.</typeparam>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing the child values of this <see cref="T:Raven.Json.Linq.RavenJToken"/>, in document order.
            </returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJToken.Values">
            <summary>
            Returns a collection of the child values of this token, in document order.
            </summary>
        </member>
        <member name="M:Raven.Json.Linq.RavenJToken.op_Implicit(System.Boolean)~Raven.Json.Linq.RavenJToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Boolean"/> to <see cref="T:Raven.Json.Linq.RavenJToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:Raven.Json.Linq.RavenJValue"/> from.</param>
            <returns>The <see cref="T:Raven.Json.Linq.RavenJValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJToken.op_Implicit(System.DateTimeOffset)~Raven.Json.Linq.RavenJToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.DateTimeOffset"/> to <see cref="T:Raven.Json.Linq.RavenJToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:Raven.Json.Linq.RavenJValue"/> from.</param>
            <returns>The <see cref="T:Raven.Json.Linq.RavenJValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJToken.op_Implicit(System.Nullable{System.Boolean})~Raven.Json.Linq.RavenJToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1"/> to <see cref="T:Raven.Json.Linq.RavenJToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:Raven.Json.Linq.RavenJValue"/> from.</param>
            <returns>The <see cref="T:Raven.Json.Linq.RavenJValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJToken.op_Implicit(System.Int64)~Raven.Json.Linq.RavenJToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1"/> to <see cref="T:Raven.Json.Linq.RavenJToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:Raven.Json.Linq.RavenJValue"/> from.</param>
            <returns>The <see cref="T:Raven.Json.Linq.RavenJValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJToken.op_Implicit(System.Nullable{System.DateTime})~Raven.Json.Linq.RavenJToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1"/> to <see cref="T:Raven.Json.Linq.RavenJToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:Raven.Json.Linq.RavenJValue"/> from.</param>
            <returns>The <see cref="T:Raven.Json.Linq.RavenJValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJToken.op_Implicit(System.Nullable{System.DateTimeOffset})~Raven.Json.Linq.RavenJToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1"/> to <see cref="T:Raven.Json.Linq.RavenJToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:Raven.Json.Linq.RavenJValue"/> from.</param>
            <returns>The <see cref="T:Raven.Json.Linq.RavenJValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJToken.op_Implicit(System.Nullable{System.Decimal})~Raven.Json.Linq.RavenJToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1"/> to <see cref="T:Raven.Json.Linq.RavenJToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:Raven.Json.Linq.RavenJValue"/> from.</param>
            <returns>The <see cref="T:Raven.Json.Linq.RavenJValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJToken.op_Implicit(System.Nullable{System.Double})~Raven.Json.Linq.RavenJToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1"/> to <see cref="T:Raven.Json.Linq.RavenJToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:Raven.Json.Linq.RavenJValue"/> from.</param>
            <returns>The <see cref="T:Raven.Json.Linq.RavenJValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJToken.op_Implicit(System.Int16)~Raven.Json.Linq.RavenJToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Int16"/> to <see cref="T:Raven.Json.Linq.RavenJToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:Raven.Json.Linq.RavenJValue"/> from.</param>
            <returns>The <see cref="T:Raven.Json.Linq.RavenJValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJToken.op_Implicit(System.UInt16)~Raven.Json.Linq.RavenJToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.UInt16"/> to <see cref="T:Raven.Json.Linq.RavenJToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:Raven.Json.Linq.RavenJValue"/> from.</param>
            <returns>The <see cref="T:Raven.Json.Linq.RavenJValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJToken.op_Implicit(System.Int32)~Raven.Json.Linq.RavenJToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Int32"/> to <see cref="T:Raven.Json.Linq.RavenJToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:Raven.Json.Linq.RavenJValue"/> from.</param>
            <returns>The <see cref="T:Raven.Json.Linq.RavenJValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJToken.op_Implicit(System.Nullable{System.Int32})~Raven.Json.Linq.RavenJToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1"/> to <see cref="T:Raven.Json.Linq.RavenJToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:Raven.Json.Linq.RavenJValue"/> from.</param>
            <returns>The <see cref="T:Raven.Json.Linq.RavenJValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJToken.op_Implicit(System.DateTime)~Raven.Json.Linq.RavenJToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.DateTime"/> to <see cref="T:Raven.Json.Linq.RavenJToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:Raven.Json.Linq.RavenJValue"/> from.</param>
            <returns>The <see cref="T:Raven.Json.Linq.RavenJValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJToken.op_Implicit(System.Nullable{System.Int64})~Raven.Json.Linq.RavenJToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1"/> to <see cref="T:Raven.Json.Linq.RavenJToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:Raven.Json.Linq.RavenJValue"/> from.</param>
            <returns>The <see cref="T:Raven.Json.Linq.RavenJValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJToken.op_Implicit(System.Nullable{System.Single})~Raven.Json.Linq.RavenJToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1"/> to <see cref="T:Raven.Json.Linq.RavenJToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:Raven.Json.Linq.RavenJValue"/> from.</param>
            <returns>The <see cref="T:Raven.Json.Linq.RavenJValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJToken.op_Implicit(System.Decimal)~Raven.Json.Linq.RavenJToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Decimal"/> to <see cref="T:Raven.Json.Linq.RavenJToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:Raven.Json.Linq.RavenJValue"/> from.</param>
            <returns>The <see cref="T:Raven.Json.Linq.RavenJValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJToken.op_Implicit(System.Nullable{System.Int16})~Raven.Json.Linq.RavenJToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1"/> to <see cref="T:Raven.Json.Linq.RavenJToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:Raven.Json.Linq.RavenJValue"/> from.</param>
            <returns>The <see cref="T:Raven.Json.Linq.RavenJValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJToken.op_Implicit(System.Nullable{System.UInt16})~Raven.Json.Linq.RavenJToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1"/> to <see cref="T:Raven.Json.Linq.RavenJToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:Raven.Json.Linq.RavenJValue"/> from.</param>
            <returns>The <see cref="T:Raven.Json.Linq.RavenJValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJToken.op_Implicit(System.Nullable{System.UInt32})~Raven.Json.Linq.RavenJToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1"/> to <see cref="T:Raven.Json.Linq.RavenJToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:Raven.Json.Linq.RavenJValue"/> from.</param>
            <returns>The <see cref="T:Raven.Json.Linq.RavenJValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJToken.op_Implicit(System.Nullable{System.UInt64})~Raven.Json.Linq.RavenJToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Nullable`1"/> to <see cref="T:Raven.Json.Linq.RavenJToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:Raven.Json.Linq.RavenJValue"/> from.</param>
            <returns>The <see cref="T:Raven.Json.Linq.RavenJValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJToken.op_Implicit(System.Double)~Raven.Json.Linq.RavenJToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Double"/> to <see cref="T:Raven.Json.Linq.RavenJToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:Raven.Json.Linq.RavenJValue"/> from.</param>
            <returns>The <see cref="T:Raven.Json.Linq.RavenJValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJToken.op_Implicit(System.Single)~Raven.Json.Linq.RavenJToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Single"/> to <see cref="T:Raven.Json.Linq.RavenJToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:Raven.Json.Linq.RavenJValue"/> from.</param>
            <returns>The <see cref="T:Raven.Json.Linq.RavenJValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJToken.op_Implicit(System.String)~Raven.Json.Linq.RavenJToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.String"/> to <see cref="T:Raven.Json.Linq.RavenJToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:Raven.Json.Linq.RavenJValue"/> from.</param>
            <returns>The <see cref="T:Raven.Json.Linq.RavenJValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJToken.op_Implicit(System.UInt32)~Raven.Json.Linq.RavenJToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.UInt32"/> to <see cref="T:Raven.Json.Linq.RavenJToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:Raven.Json.Linq.RavenJValue"/> from.</param>
            <returns>The <see cref="T:Raven.Json.Linq.RavenJValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJToken.op_Implicit(System.UInt64)~Raven.Json.Linq.RavenJToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.UInt64"/> to <see cref="T:Raven.Json.Linq.RavenJToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:Raven.Json.Linq.RavenJValue"/> from.</param>
            <returns>The <see cref="T:Raven.Json.Linq.RavenJValue"/> initialized with the specified value.</returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJToken.op_Implicit(System.Byte[])~Raven.Json.Linq.RavenJToken">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Byte[]"/> to <see cref="T:Raven.Json.Linq.RavenJToken"/>.
            </summary>
            <param name="value">The value to create a <see cref="T:Raven.Json.Linq.RavenJValue"/> from.</param>
            <returns>The <see cref="T:Raven.Json.Linq.RavenJValue"/> initialized with the specified value.</returns>
        </member>
        <member name="P:Raven.Json.Linq.RavenJToken.Type">
            <summary>
            Gets the node type for this <see cref="T:Raven.Json.Linq.RavenJToken"/>.
            </summary>
            <value>The type.</value>
        </member>
        <member name="M:Raven.Json.Linq.RavenJArray.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Json.Linq.RavenJArray"/> class.
            </summary>
        </member>
        <member name="M:Raven.Json.Linq.RavenJArray.#ctor(System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Json.Linq.RavenJArray"/> class with the specified content.
            </summary>
            <param name="content">The contents of the array.</param>
        </member>
        <member name="M:Raven.Json.Linq.RavenJArray.#ctor(System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Json.Linq.RavenJArray"/> class with the specified content.
            </summary>
            <param name="content">The contents of the array.</param>
        </member>
        <member name="M:Raven.Json.Linq.RavenJArray.Parse(System.String)">
            <summary>
            Load a <see cref="T:Raven.Json.Linq.RavenJArray"/> from a string that contains JSON.
            </summary>
            <param name="json">A <see cref="T:System.String"/> that contains JSON.</param>
            <returns>A <see cref="T:Raven.Json.Linq.RavenJArray"/> populated from the string that contains JSON.</returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJArray.WriteTo(Newtonsoft.Json.JsonWriter,Newtonsoft.Json.JsonConverter[])">
            <summary>
            Writes this token to a <see cref="T:Newtonsoft.Json.JsonWriter"/>.
            </summary>
            <param name="writer">A <see cref="T:Newtonsoft.Json.JsonWriter"/> into which this method will write.</param>
            <param name="converters">A collection of <see cref="T:Newtonsoft.Json.JsonConverter"/> which will be used when writing the token.</param>
        </member>
        <member name="P:Raven.Json.Linq.RavenJArray.Type">
            <summary>
            Gets the node type for this <see cref="T:Raven.Json.Linq.RavenJToken"/>.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Raven.Json.Linq.RavenJArray.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Raven.Json.Linq.RavenJToken"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:Raven.Json.Linq.RavenJObject">
            <summary>
            Represents a JSON object.
            </summary>
        </member>
        <member name="M:Raven.Json.Linq.RavenJObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Json.Linq.RavenJObject"/> class.
            </summary>
        </member>
        <member name="M:Raven.Json.Linq.RavenJObject.Value``1(System.String)">
            <summary>
            Gets the <see cref="T:Raven.Json.Linq.RavenJToken"/> with the specified key converted to the specified type.
            </summary>
            <typeparam name="T">The type to convert the token to.</typeparam>
            <param name="key">The token key.</param>
            <returns>The converted token value.</returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJObject.FromObject(System.Object)">
            <summary>
            Creates a <see cref="T:Raven.Json.Linq.RavenJObject"/> from an object.
            </summary>
            <param name="o">The object that will be used to create <see cref="T:Raven.Json.Linq.RavenJObject"/>.</param>
            <returns>A <see cref="T:Raven.Json.Linq.RavenJObject"/> with the values of the specified object</returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJObject.FromObject(System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Creates a <see cref="T:Raven.Json.Linq.RavenJArray"/> from an object.
            </summary>
            <param name="o">The object that will be used to create <see cref="T:Raven.Json.Linq.RavenJArray"/>.</param>
            <param name="jsonSerializer">The <see cref="T:Newtonsoft.Json.JsonSerializer"/> that will be used to read the object.</param>
            <returns>A <see cref="T:Raven.Json.Linq.RavenJArray"/> with the values of the specified object</returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJObject.Load(Newtonsoft.Json.JsonReader)">
            <summary>
            Loads an <see cref="T:Raven.Json.Linq.RavenJObject"/> from a <see cref="T:Newtonsoft.Json.JsonReader"/>. 
            </summary>
            <param name="reader">A <see cref="T:Newtonsoft.Json.JsonReader"/> that will be read for the content of the <see cref="T:Raven.Json.Linq.RavenJObject"/>.</param>
            <returns>A <see cref="T:Raven.Json.Linq.RavenJObject"/> that contains the JSON that was read from the specified <see cref="T:Newtonsoft.Json.JsonReader"/>.</returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJObject.Parse(System.String)">
            <summary>
            Load a <see cref="T:Raven.Json.Linq.RavenJObject"/> from a string that contains JSON.
            </summary>
            <param name="json">A <see cref="T:System.String"/> that contains JSON.</param>
            <returns>A <see cref="T:Raven.Json.Linq.RavenJObject"/> populated from the string that contains JSON.</returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJObject.WriteTo(Newtonsoft.Json.JsonWriter,Newtonsoft.Json.JsonConverter[])">
            <summary>
            Writes this token to a <see cref="T:Newtonsoft.Json.JsonWriter"/>.
            </summary>
            <param name="writer">A <see cref="T:Newtonsoft.Json.JsonWriter"/> into which this method will write.</param>
            <param name="converters">A collection of <see cref="T:Newtonsoft.Json.JsonConverter"/> which will be used when writing the token.</param>
        </member>
        <member name="P:Raven.Json.Linq.RavenJObject.Type">
            <summary>
            Gets the node type for this <see cref="T:Raven.Json.Linq.RavenJToken"/>.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Raven.Json.Linq.RavenJObject.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:Raven.Json.Linq.RavenJToken"/> with the specified property name.
            </summary>
            <value></value>
        </member>
        <member name="T:Raven.Json.Linq.RavenJTokenEqualityComparer">
            <summary>
            Compares tokens to determine whether they are equal.
            </summary>
        </member>
        <member name="M:Raven.Json.Linq.RavenJTokenEqualityComparer.Equals(Raven.Json.Linq.RavenJToken,Raven.Json.Linq.RavenJToken)">
            <summary>
            Determines whether the specified objects are equal.
            </summary>
            <param name="x">The first object of type <see cref="T:Raven.Json.Linq.RavenJToken"/> to compare.</param>
            <param name="y">The second object of type <see cref="T:Raven.Json.Linq.RavenJToken"/> to compare.</param>
            <returns>
            true if the specified objects are equal; otherwise, false.
            </returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJTokenEqualityComparer.GetHashCode(Raven.Json.Linq.RavenJToken)">
            <summary>
            Returns a hash code for the specified object.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> for which a hash code is to be returned.</param>
            <returns>A hash code for the specified object.</returns>
            <exception cref="T:System.ArgumentNullException">The type of <paramref name="obj"/> is a reference type and <paramref name="obj"/> is null.</exception>
        </member>
        <member name="T:Raven.Json.Linq.RavenJTokenReader">
            <summary>
            Represents a reader that provides fast, non-cached, forward-only access to serialized Json data.
            </summary>
        </member>
        <member name="M:Raven.Json.Linq.RavenJTokenReader.#ctor(Raven.Json.Linq.RavenJToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Json.Linq.RavenJTokenReader"/> class.
            </summary>
            <param name="token">The token to read from.</param>
        </member>
        <member name="M:Raven.Json.Linq.RavenJTokenReader.ReadAsBytes">
            <summary>
            Reads the next JSON token from the stream as a <see cref="T:Byte[]"/>.
            </summary>
            <returns>
            A <see cref="T:Byte[]"/> or a null reference if the next JSON token is null.
            </returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJTokenReader.ReadAsDecimal">
            <summary>
            Reads the next JSON token from the stream as a <see cref="T:System.Nullable`1"/>.
            </summary>
            <returns>A <see cref="T:System.Nullable`1"/>.</returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJTokenReader.ReadAsInt32">
            <summary>
            Reads the next JSON token from the stream as a <see cref="T:System.Nullable`1"/>.
            </summary>
            <returns>A <see cref="T:System.Nullable`1"/>.</returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJTokenReader.ReadAsDateTimeOffset">
            <summary>
            Reads the next JSON token from the stream as a <see cref="T:System.Nullable`1"/>.
            </summary>
            <returns>A <see cref="T:System.Nullable`1"/>.</returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJTokenReader.Read">
            <summary>
            Reads the next JSON token from the stream.
            </summary>
            <returns>
            true if the next token was read successfully; false if there are no more tokens to read.
            </returns>
        </member>
        <member name="T:Raven.Json.Linq.RavenJTokenWriter">
            <summary>
            Represents a writer that provides a fast, non-cached, forward-only way of generating Json data.
            </summary>
        </member>
        <member name="M:Raven.Json.Linq.RavenJTokenWriter.Flush">
            <summary>
            Flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.
            </summary>
        </member>
        <member name="M:Raven.Json.Linq.RavenJTokenWriter.WriteStartArray">
            <summary>
            Writes the beginning of a Json array.
            </summary>
        </member>
        <member name="M:Raven.Json.Linq.RavenJTokenWriter.WriteEnd(Newtonsoft.Json.JsonToken)">
            <summary>
            Writes the end.
            </summary>
            <param name="token">The token.</param>
        </member>
        <member name="M:Raven.Json.Linq.RavenJTokenWriter.WriteNull">
            <summary>
            Writes a null value.
            </summary>
        </member>
        <member name="M:Raven.Json.Linq.RavenJTokenWriter.WriteUndefined">
            <summary>
            Writes an undefined value.
            </summary>
        </member>
        <member name="M:Raven.Json.Linq.RavenJTokenWriter.WriteValue(System.String)">
            <summary>
            Writes a <see cref="T:System.String"/> value.
            </summary>
            <param name="value">The <see cref="T:System.String"/> value to write.</param>
        </member>
        <member name="M:Raven.Json.Linq.RavenJTokenWriter.WriteValue(System.Int32)">
            <summary>
            Writes a <see cref="T:System.Int32"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Int32"/> value to write.</param>
        </member>
        <member name="M:Raven.Json.Linq.RavenJTokenWriter.WriteValue(System.UInt32)">
            <summary>
            Writes a <see cref="T:System.UInt32"/> value.
            </summary>
            <param name="value">The <see cref="T:System.UInt32"/> value to write.</param>
        </member>
        <member name="M:Raven.Json.Linq.RavenJTokenWriter.WriteValue(System.Int64)">
            <summary>
            Writes a <see cref="T:System.Int64"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Int64"/> value to write.</param>
        </member>
        <member name="M:Raven.Json.Linq.RavenJTokenWriter.WriteValue(System.UInt64)">
            <summary>
            Writes a <see cref="T:System.UInt64"/> value.
            </summary>
            <param name="value">The <see cref="T:System.UInt64"/> value to write.</param>
        </member>
        <member name="M:Raven.Json.Linq.RavenJTokenWriter.WriteValue(System.Single)">
            <summary>
            Writes a <see cref="T:System.Single"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Single"/> value to write.</param>
        </member>
        <member name="M:Raven.Json.Linq.RavenJTokenWriter.WriteValue(System.Double)">
            <summary>
            Writes a <see cref="T:System.Double"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Double"/> value to write.</param>
        </member>
        <member name="M:Raven.Json.Linq.RavenJTokenWriter.WriteValue(System.Boolean)">
            <summary>
            Writes a <see cref="T:System.Boolean"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Boolean"/> value to write.</param>
        </member>
        <member name="M:Raven.Json.Linq.RavenJTokenWriter.WriteValue(System.Int16)">
            <summary>
            Writes a <see cref="T:System.Int16"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Int16"/> value to write.</param>
        </member>
        <member name="M:Raven.Json.Linq.RavenJTokenWriter.WriteValue(System.UInt16)">
            <summary>
            Writes a <see cref="T:System.UInt16"/> value.
            </summary>
            <param name="value">The <see cref="T:System.UInt16"/> value to write.</param>
        </member>
        <member name="M:Raven.Json.Linq.RavenJTokenWriter.WriteValue(System.Char)">
            <summary>
            Writes a <see cref="T:System.Char"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Char"/> value to write.</param>
        </member>
        <member name="M:Raven.Json.Linq.RavenJTokenWriter.WriteValue(System.Byte)">
            <summary>
            Writes a <see cref="T:System.Byte"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Byte"/> value to write.</param>
        </member>
        <member name="M:Raven.Json.Linq.RavenJTokenWriter.WriteValue(System.SByte)">
            <summary>
            Writes a <see cref="T:System.SByte"/> value.
            </summary>
            <param name="value">The <see cref="T:System.SByte"/> value to write.</param>
        </member>
        <member name="M:Raven.Json.Linq.RavenJTokenWriter.WriteValue(System.Decimal)">
            <summary>
            Writes a <see cref="T:System.Decimal"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Decimal"/> value to write.</param>
        </member>
        <member name="M:Raven.Json.Linq.RavenJTokenWriter.WriteValue(System.DateTime)">
            <summary>
            Writes a <see cref="T:System.DateTime"/> value.
            </summary>
            <param name="value">The <see cref="T:System.DateTime"/> value to write.</param>
        </member>
        <member name="M:Raven.Json.Linq.RavenJTokenWriter.WriteValue(System.DateTimeOffset)">
            <summary>
            Writes a <see cref="T:System.DateTimeOffset"/> value.
            </summary>
            <param name="value">The <see cref="T:System.DateTimeOffset"/> value to write.</param>
        </member>
        <member name="M:Raven.Json.Linq.RavenJTokenWriter.WriteValue(System.Byte[])">
            <summary>
            Writes a <see cref="T:Byte[]"/> value.
            </summary>
            <param name="value">The <see cref="T:Byte[]"/> value to write.</param>
        </member>
        <member name="M:Raven.Json.Linq.RavenJTokenWriter.WriteValue(System.Guid)">
            <summary>
            Writes a <see cref="T:System.Guid"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Guid"/> value to write.</param>
        </member>
        <member name="M:Raven.Json.Linq.RavenJTokenWriter.WriteValue(System.TimeSpan)">
            <summary>
            Writes a <see cref="T:System.TimeSpan"/> value.
            </summary>
            <param name="value">The <see cref="T:System.TimeSpan"/> value to write.</param>
        </member>
        <member name="M:Raven.Json.Linq.RavenJTokenWriter.WriteValue(System.Uri)">
            <summary>
            Writes a <see cref="T:System.Uri"/> value.
            </summary>
            <param name="value">The <see cref="T:System.Uri"/> value to write.</param>
        </member>
        <member name="P:Raven.Json.Linq.RavenJTokenWriter.Token">
            <summary>
            Gets the token being writen.
            </summary>
            <value>The token being writen.</value>
        </member>
        <member name="T:Raven.Json.Linq.RavenJValue">
            <summary>
            Represents a value in JSON (string, integer, date, etc).
            </summary>
        </member>
        <member name="M:Raven.Json.Linq.RavenJValue.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Json.Linq.RavenJValue"/> class with the given value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Raven.Json.Linq.RavenJValue.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Json.Linq.RavenJValue"/> class with the given value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Raven.Json.Linq.RavenJValue.#ctor(System.UInt64)">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Json.Linq.RavenJValue"/> class with the given value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Raven.Json.Linq.RavenJValue.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Json.Linq.RavenJValue"/> class with the given value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Raven.Json.Linq.RavenJValue.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Json.Linq.RavenJValue"/> class with the given value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Raven.Json.Linq.RavenJValue.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Json.Linq.RavenJValue"/> class with the given value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Raven.Json.Linq.RavenJValue.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Json.Linq.RavenJValue"/> class with the given value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Raven.Json.Linq.RavenJValue.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Newtonsoft.Json.Linq.JValue"/> class with the given value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Raven.Json.Linq.RavenJValue.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Newtonsoft.Json.Linq.JValue"/> class with the given value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Raven.Json.Linq.RavenJValue.#ctor(System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Newtonsoft.Json.Linq.JValue"/> class with the given value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Raven.Json.Linq.RavenJValue.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Json.Linq.RavenJValue"/> class with the given value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Raven.Json.Linq.RavenJValue.WriteTo(Newtonsoft.Json.JsonWriter,Newtonsoft.Json.JsonConverter[])">
            <summary>
            Writes this token to a <see cref="T:Newtonsoft.Json.JsonWriter"/>.
            </summary>
            <param name="writer">A <see cref="T:Newtonsoft.Json.JsonWriter"/> into which this method will write.</param>
            <param name="converters">A collection of <see cref="T:Newtonsoft.Json.JsonConverter"/> which will be used when writing the token.</param>
        </member>
        <member name="M:Raven.Json.Linq.RavenJValue.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <exception cref="T:System.NullReferenceException">
            The <paramref name="obj"/> parameter is null.
            </exception>
        </member>
        <member name="M:Raven.Json.Linq.RavenJValue.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJValue.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJValue.ToString(System.String)">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <param name="format">The format.</param>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJValue.ToString(System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <param name="formatProvider">The format provider.</param>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Raven.Json.Linq.RavenJValue.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <param name="format">The format.</param>
            <param name="formatProvider">The format provider.</param>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:Raven.Json.Linq.RavenJValue.Type">
            <summary>
            Gets the node type for this <see cref="T:Raven.Json.Linq.RavenJToken"/>.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Raven.Json.Linq.RavenJValue.Value">
            <summary>
            Gets or sets the underlying token value.
            </summary>
            <value>The underlying token value.</value>
        </member>
        <member name="M:Raven.Abstractions.Json.JsonDateTimeOffsetConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter"/> to write to.</param><param name="value">The value.</param><param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:Raven.Abstractions.Json.JsonDateTimeOffsetConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader"/> to read from.</param><param name="objectType">Type of the object.</param><param name="existingValue">The existing value of object being read.</param><param name="serializer">The calling serializer.</param>
            <returns>
            The object value.
            </returns>
        </member>
        <member name="M:Raven.Abstractions.Json.JsonDateTimeOffsetConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            <c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Raven.Abstractions.Json.JsonMultiDimensionalArrayConverter">
            <summary>
            Convert a MultiDimensional Array to a json string
            </summary>
        </member>
        <member name="M:Raven.Abstractions.Json.JsonMultiDimensionalArrayConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Raven.Abstractions.Json.JsonMultiDimensionalArrayConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:Raven.Abstractions.Json.JsonMultiDimensionalArrayConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:Raven.Abstractions.Json.JsonMultiDimensionalArrayConverter.ReadRank(Newtonsoft.Json.JsonReader,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Read in all the values from the Json reader and populate a nested ArrayList
            </summary>
            <param name="reader">JsonReader to use</param>
            <param name="serializer">JsonSerializer to use</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Abstractions.Json.JsonMultiDimensionalArrayConverter.GetRankLengthList(System.Collections.Generic.List{System.Object})">
            <summary>
            Retrieve a list of lengths for each rank represented
            </summary>
            <param name="arrayList">The list to process</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Abstractions.Json.JsonMultiDimensionalArrayConverter.SetValues(System.Array,System.Int32[],System.Int32[],System.Int32,System.Collections.Generic.List{System.Object})">
            <summary>
            Assign values from the ArrayList into their respective place in the multidimensional array
            </summary>
            <param name="multiDimensionalArray">Array that will be receiving the newValues</param>
            <param name="rankLengthList">A list of the lengths of each rank</param>
            <param name="assignToIndexList">A list of the current index settings to be used for assignments</param>
            <param name="currentRank">Rank currently being processed</param>
            <param name="newValues">New Values that will be used in the assignment</param>
        </member>
        <member name="M:Raven.Abstractions.Json.JsonMultiDimensionalArrayConverter.WriteRank(Newtonsoft.Json.JsonWriter,Newtonsoft.Json.JsonSerializer,System.Array,System.Int32,System.Int32[])">
            <summary>
            Write a rank of an array in Json format
            </summary>
            <param name="writer">JsonWriter in use</param>
            <param name="serializer">JsonSerializer in use</param>
            <param name="array">Array to be written</param>
            <param name="currentRank">Current rank "depth"</param>
            <param name="assignFromIndexList">List of indexes currently being used to read from the array</param>
        </member>
        <member name="T:Raven.Abstractions.Extensions.MetadataExtensions">
            <summary>
            Extensions for handling metadata
            </summary>
        </member>
        <member name="M:Raven.Abstractions.Extensions.MetadataExtensions.FilterHeaders(Raven.Json.Linq.RavenJObject,System.Boolean)">
            <summary>
            Filters the headers from unwanted headers
            </summary>
            <param name="self">The self.</param>
            <param name="isServerDocument">if set to <c>true</c> [is server document].</param>
            <returns></returns>public static RavenJObject FilterHeaders(this System.Collections.Specialized.NameValueCollection self, bool isServerDocument)
        </member>
        <member name="M:Raven.Abstractions.Extensions.MetadataExtensions.FilterHeaders(System.Collections.Specialized.NameValueCollection,System.Boolean)">
            <summary>
            Filters the headers from unwanted headers
            </summary>
            <param name="self">The self.</param>
            <param name="isServerDocument">if set to <c>true</c> [is server document].</param>
            <returns></returns>public static RavenJObject FilterHeaders(this System.Collections.Specialized.NameValueCollection self, bool isServerDocument)
        </member>
        <member name="T:Raven.Abstractions.Extensions.Reference`1">
            <summary>
            A reference that can be used with lambda expression
            to pass a value out.
            </summary>
        </member>
        <member name="P:Raven.Abstractions.Extensions.Reference`1.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:Raven.Abstractions.Extensions.StreamExtensions">
            <summary>
            Extensions for working with streams
            </summary>
        </member>
        <member name="M:Raven.Abstractions.Extensions.StreamExtensions.ReadData(System.IO.Stream)">
            <summary>
            Reads the entire request buffer to memory and return it as a byte array.
            </summary>
            <param name="stream">The stream to read.</param>
            <returns>The returned byte array.</returns>
        </member>
        <member name="T:Raven.Abstractions.Indexing.FieldIndexing">
            <summary>
            Options for indexing a field
            </summary>
        </member>
        <member name="F:Raven.Abstractions.Indexing.FieldIndexing.No">
            <summary>
            Do not index the field value. This field can thus not be searched, but one can still access its contents provided it is stored.
            </summary>
        </member>
        <member name="F:Raven.Abstractions.Indexing.FieldIndexing.Analyzed">
            <summary>
            Index the tokens produced by running the field's value through an Analyzer. This is useful for common text.
            </summary>
        </member>
        <member name="F:Raven.Abstractions.Indexing.FieldIndexing.NotAnalyzed">
            <summary>
            Index the field's value without using an Analyzer, so it can be searched.  As no analyzer is used the 
            value will be stored as a single term. This is useful for unique Ids like product numbers.
            </summary>
        </member>
        <member name="F:Raven.Abstractions.Indexing.FieldIndexing.Default">
            <summary>
            Index this field using the default internal analyzer: LowerCaseKeywordAnalyzer
            </summary>
        </member>
        <member name="T:Raven.Abstractions.Indexing.FieldStorage">
            <summary>
            Specifies whether and how a field should be stored.
            </summary>
        </member>
        <member name="F:Raven.Abstractions.Indexing.FieldStorage.Yes">
            <summary>
            Store the original field value in the index. This is useful for short texts like a document's title which should be displayed with the results. 
            The value is stored in its original form, i.e. no analyzer is used before it is stored.
            </summary>
        </member>
        <member name="F:Raven.Abstractions.Indexing.FieldStorage.No">
            <summary>
            Do not store the field value in the index.
            </summary>
        </member>
        <member name="F:Raven.Abstractions.Indexing.FieldStorage.Compress">
            <summary>
            Store the original field value in the index in a compressed form. This is useful for long documents and for binary valued fields.
            </summary>
        </member>
        <member name="T:Raven.Abstractions.Indexing.IndexDefinition">
            <summary>
            A definition of a RavenIndex
            </summary>
        </member>
        <member name="M:Raven.Abstractions.Indexing.IndexDefinition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Abstractions.Indexing.IndexDefinition"/> class.
            </summary>
        </member>
        <member name="M:Raven.Abstractions.Indexing.IndexDefinition.Equals(Raven.Abstractions.Indexing.IndexDefinition)">
            <summary>
            Equals the specified other.
            </summary>
            <param name="other">The other.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Abstractions.Indexing.IndexDefinition.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
            	<c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Raven.Abstractions.Indexing.IndexDefinition.GetIndexHash">
            <summary>
            Provide a cached version of the index hash code, which is used when generating
            the index etag. 
            It isn't really useful for anything else, in particular, we cache that because
            we want to avoid calculating the cost of doing this over and over again on each 
            query.
            </summary>
        </member>
        <member name="M:Raven.Abstractions.Indexing.IndexDefinition.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Raven.Abstractions.Indexing.IndexDefinition.RemoveDefaultValues">
            <summary>
            Remove the default values that we don't actually need
            </summary>
        </member>
        <member name="P:Raven.Abstractions.Indexing.IndexDefinition.Name">
            <summary>
            Get or set the name of the index
            </summary>
        </member>
        <member name="P:Raven.Abstractions.Indexing.IndexDefinition.Map">
            <summary>
            Gets or sets the map function, if there is only one
            </summary>
            <remarks>
            This property only exists for backward compatability purposes
            </remarks>
        </member>
        <member name="P:Raven.Abstractions.Indexing.IndexDefinition.Maps">
            <summary>
            All the map functions for this index
            </summary>
        </member>
        <member name="P:Raven.Abstractions.Indexing.IndexDefinition.Reduce">
            <summary>
            Gets or sets the reduce function
            </summary>
            <value>The reduce.</value>
        </member>
        <member name="P:Raven.Abstractions.Indexing.IndexDefinition.TransformResults">
            <summary>
            Gets or sets the translator function
            </summary>
        </member>
        <member name="P:Raven.Abstractions.Indexing.IndexDefinition.IsMapReduce">
            <summary>
            Gets a value indicating whether this instance is map reduce index definition
            </summary>
            <value>
            	<c>true</c> if this instance is map reduce; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Raven.Abstractions.Indexing.IndexDefinition.IsTemp">
            <summary>
            Returns a boolean value indicating whether this IndexDefinition is of a temporary index
            </summary>
        </member>
        <member name="P:Raven.Abstractions.Indexing.IndexDefinition.Stores">
            <summary>
            Gets or sets the stores options
            </summary>
            <value>The stores.</value>
        </member>
        <member name="P:Raven.Abstractions.Indexing.IndexDefinition.Indexes">
            <summary>
            Gets or sets the indexing options
            </summary>
            <value>The indexes.</value>
        </member>
        <member name="P:Raven.Abstractions.Indexing.IndexDefinition.SortOptions">
            <summary>
            Gets or sets the sort options.
            </summary>
            <value>The sort options.</value>
        </member>
        <member name="P:Raven.Abstractions.Indexing.IndexDefinition.Analyzers">
            <summary>
            Gets or sets the analyzers options
            </summary>
            <value>The analyzers.</value>
        </member>
        <member name="P:Raven.Abstractions.Indexing.IndexDefinition.Fields">
            <summary>
            The fields that are queryable in the index
            </summary>
        </member>
        <member name="T:Raven.Abstractions.Indexing.NumberUtil">
            <summary>
            Helper function for numeric to indexed string and vice versa
            </summary>
        </member>
        <member name="M:Raven.Abstractions.Indexing.NumberUtil.NumberToString(System.Int32)">
            <summary>
            Translate a number to an indexable string
            </summary>
        </member>
        <member name="M:Raven.Abstractions.Indexing.NumberUtil.NumberToString(System.Int64)">
            <summary>
            Translate a number to an indexable string
            </summary>
        </member>
        <member name="M:Raven.Abstractions.Indexing.NumberUtil.NumberToString(System.Single)">
            <summary>
            Translate a number to an indexable string
            </summary>
        </member>
        <member name="M:Raven.Abstractions.Indexing.NumberUtil.NumberToString(System.Double)">
            <summary>
            Translate a number to an indexable string
            </summary>
        </member>
        <member name="M:Raven.Abstractions.Indexing.NumberUtil.StringToNumber(System.String)">
            <summary>
            Translate an indexable string to a number
            </summary>
        </member>
        <member name="T:Raven.Abstractions.Json.DynamicUtil">
            <summary>
            Helper class for working with dynamic values completely dynamically
            </summary>
        </member>
        <member name="M:Raven.Abstractions.Json.DynamicUtil.GetValueDynamically(System.Object,System.String)">
            <summary>
            Gets the value dynamically.
            </summary>
            <param name="entity">The entity.</param>
            <param name="dynamicMemberName">Name of the dynamic member.</param>
            <returns></returns>
        </member>
        <member name="T:Raven.Abstractions.Json.JsonDynamicConverter">
            <summary>
            Convert a dynamic variable to a json value and vice versa
            </summary>
        </member>
        <member name="M:Raven.Abstractions.Json.JsonDynamicConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:Raven.Abstractions.Json.JsonDynamicConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:Raven.Abstractions.Json.JsonDynamicConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Raven.Abstractions.Json.JsonEnumConverter">
            <summary>
            Convert an enum to a json string
            </summary>
        </member>
        <member name="M:Raven.Abstractions.Json.JsonEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:Raven.Abstractions.Json.JsonEnumConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:Raven.Abstractions.Json.JsonEnumConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            	<c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Raven.Abstractions.Json.JTokenExtensions">
            <summary>
            Extensions for RavenJToken
            </summary>
        </member>
        <member name="T:Raven.Abstractions.Linq.DateTools">
            <summary> Provides support for converting dates to strings and vice-versa.
            The strings are structured so that lexicographic sorting orders 
            them by date, which makes them suitable for use as field values 
            and search terms.
            
            <p/>This class also helps you to limit the resolution of your dates. Do not
            save dates with a finer resolution than you really need, as then
            RangeQuery and PrefixQuery will require more memory and become slower.
            
            <p/>Compared to {@link DateField} the strings generated by the methods
            in this class take slightly more space, unless your selected resolution
            is set to <code>Resolution.DAY</code> or lower.
            
            <p/>
            Another approach is {@link NumericUtils}, which provides
            a sortable binary representation (prefix encoded) of numeric values, which
            date/time are.
            For indexing a {@link Date} or {@link Calendar}, just get the Unix timestamp as
            <code>long</code> using {@link Date#getTime} or {@link Calendar#getTimeInMillis} and
            index this as a numeric value with {@link NumericField}
            and use {@link NumericRangeQuery} to query it.
            </summary>
        </member>
        <member name="M:Raven.Abstractions.Linq.DateTools.DateToString(System.DateTime,Raven.Abstractions.Linq.DateTools.Resolution)">
            <summary> Converts a Date to a string suitable for indexing.
            
            </summary>
            <param name="date">the date to be converted
            </param>
            <param name="resolution">the desired resolution, see
            {@link #Round(Date, DateTools.Resolution)}
            </param>
            <returns> a string in format <code>yyyyMMddHHmmssSSS</code> or shorter,
            depending on <code>resolution</code>; using GMT as timezone 
            </returns>
        </member>
        <member name="M:Raven.Abstractions.Linq.DateTools.TimeToString(System.Int64,Raven.Abstractions.Linq.DateTools.Resolution)">
            <summary> Converts a millisecond time to a string suitable for indexing.
            
            </summary>
            <param name="time">the date expressed as milliseconds since January 1, 1970, 00:00:00 GMT
            </param>
            <param name="resolution">the desired resolution, see
            {@link #Round(long, DateTools.Resolution)}
            </param>
            <returns> a string in format <code>yyyyMMddHHmmssSSS</code> or shorter,
            depending on <code>resolution</code>; using GMT as timezone
            </returns>
        </member>
        <member name="M:Raven.Abstractions.Linq.DateTools.StringToTime(System.String)">
            <summary> Converts a string produced by <code>timeToString</code> or
            <code>DateToString</code> back to a time, represented as the
            number of milliseconds since January 1, 1970, 00:00:00 GMT.
            
            </summary>
            <param name="dateString">the date string to be converted
            </param>
            <returns> the number of milliseconds since January 1, 1970, 00:00:00 GMT
            </returns>
            <throws>  ParseException if <code>dateString</code> is not in the  </throws>
            <summary>  expected format 
            </summary>
        </member>
        <member name="M:Raven.Abstractions.Linq.DateTools.StringToDate(System.String)">
            <summary> Converts a string produced by <code>timeToString</code> or
            <code>DateToString</code> back to a time, represented as a
            Date object.
            
            </summary>
            <param name="dateString">the date string to be converted
            </param>
            <returns> the parsed time as a Date object 
            </returns>
            <throws>  ParseException if <code>dateString</code> is not in the  </throws>
            <summary>  expected format 
            </summary>
        </member>
        <member name="M:Raven.Abstractions.Linq.DateTools.Round(System.DateTime,Raven.Abstractions.Linq.DateTools.Resolution)">
            <summary>
            Limit a date's resolution. For example, the date <code>2004-09-21 13:50:11</code>
            will be changed to <code>2004-09-01 00:00:00</code> when using
            <code>Resolution.MONTH</code>.
            </summary>
            <param name="date">The date.</param>
            <param name="resolution">The desired resolution of the date to be returned</param>
            <returns>
            the date with all values more precise than <code>resolution</code>
            set to 0 or 1
            </returns>
        </member>
        <member name="M:Raven.Abstractions.Linq.DateTools.Round(System.Int64,Raven.Abstractions.Linq.DateTools.Resolution)">
            <summary> Limit a date's resolution. For example, the date <code>1095767411000</code>
            (which represents 2004-09-21 13:50:11) will be changed to 
            <code>1093989600000</code> (2004-09-01 00:00:00) when using
            <code>Resolution.MONTH</code>.
            
            </summary>
            <param name="time">The time in milliseconds (not ticks).</param>
            <param name="resolution">The desired resolution of the date to be returned
            </param>
            <returns> the date with all values more precise than <code>resolution</code>
            set to 0 or 1, expressed as milliseconds since January 1, 1970, 00:00:00 GMT
            </returns>
        </member>
        <member name="T:Raven.Abstractions.Linq.DateTools.Resolution">
            <summary>Specifies the time granularity. </summary>
        </member>
        <member name="F:Raven.Abstractions.Linq.DateTools.Resolution.YEAR">
            <summary>
            Resolution by year
            </summary>
        </member>
        <member name="F:Raven.Abstractions.Linq.DateTools.Resolution.MONTH">
            <summary>
            Resolution by month
            </summary>
        </member>
        <member name="F:Raven.Abstractions.Linq.DateTools.Resolution.DAY">
            <summary>
            Resolution by day
            </summary>
        </member>
        <member name="F:Raven.Abstractions.Linq.DateTools.Resolution.HOUR">
            <summary>
            Resolution by hour
            </summary>
        </member>
        <member name="F:Raven.Abstractions.Linq.DateTools.Resolution.MINUTE">
            <summary>
            Resolution by minute
            </summary>
        </member>
        <member name="F:Raven.Abstractions.Linq.DateTools.Resolution.SECOND">
            <summary>
            Resolution by second
            </summary>
        </member>
        <member name="F:Raven.Abstractions.Linq.DateTools.Resolution.MILLISECOND">
            <summary>
            Resolution by millisecond
            </summary>
        </member>
        <member name="M:Raven.Abstractions.Linq.DateTools.Resolution.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:Raven.Abstractions.Linq.IDynamicJsonObject.Inner">
            <summary>
            Gets the inner json object
            </summary>
            <value>The inner.</value>
        </member>
        <member name="T:Raven.Abstractions.Linq.DynamicJsonObject">
            <summary>
            A dynamic implementation on top of <see cref="T:Raven.Json.Linq.RavenJObject"/>
            </summary>
        </member>
        <member name="M:Raven.Abstractions.Linq.DynamicJsonObject.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Raven.Abstractions.Linq.DynamicJsonObject.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <param name="other">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Raven.Abstractions.Linq.DynamicJsonObject.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Raven.Abstractions.Linq.DynamicJsonObject.#ctor(Raven.Json.Linq.RavenJObject)">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Abstractions.Linq.DynamicJsonObject"/> class.
            </summary>
            <param name="inner">The obj.</param>
        </member>
        <member name="M:Raven.Abstractions.Linq.DynamicJsonObject.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
            <summary>
            Provides the implementation for operations that get member values. Classes derived from the <see cref="T:System.Dynamic.DynamicObject"/> class can override this method to specify dynamic behavior for operations such as getting a value for a property.
            </summary>
            <param name="binder">Provides information about the object that called the dynamic operation. The binder.Name property provides the name of the member on which the dynamic operation is performed. For example, for the Console.WriteLine(sampleObject.SampleProperty) statement, where sampleObject is an instance of the class derived from the <see cref="T:System.Dynamic.DynamicObject"/> class, binder.Name returns "SampleProperty". The binder.IgnoreCase property specifies whether the member name is case-sensitive.</param>
            <param name="result">The result of the get operation. For example, if the method is called for a property, you can assign the property value to <paramref name="result"/>.</param>
            <returns>
            true if the operation is successful; otherwise, false. If this method returns false, the run-time binder of the language determines the behavior. (In most cases, a run-time exception is thrown.)
            </returns>
        </member>
        <member name="M:Raven.Abstractions.Linq.DynamicJsonObject.TryGetIndex(System.Dynamic.GetIndexBinder,System.Object[],System.Object@)">
            <summary>
            Provides the implementation for operations that get a value by index. Classes derived from the <see cref="T:System.Dynamic.DynamicObject"/> class can override this method to specify dynamic behavior for indexing operations.
            </summary>
            <returns>
            true if the operation is successful; otherwise, false. If this method returns false, the run-time binder of the language determines the behavior. (In most cases, a run-time exception is thrown.)
            </returns>
        </member>
        <member name="M:Raven.Abstractions.Linq.DynamicJsonObject.GetValue(System.String)">
            <summary>
            Gets the value for the specified name
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Raven.Abstractions.Linq.DynamicJsonObject.GetDocumentId">
            <summary>
            Gets the document id.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Raven.Abstractions.Linq.DynamicJsonObject.Raven#Abstractions#Linq#IDynamicJsonObject#Inner">
            <summary>
            Gets the inner json object
            </summary>
            <value>The inner.</value>
        </member>
        <member name="P:Raven.Abstractions.Linq.DynamicList.Length">
            <summary>
            Gets the length.
            </summary>
            <value>The length.</value>
        </member>
        <member name="T:Raven.Abstractions.Data.QueryResult">
            <summary>
            The result of a query
            </summary>
        </member>
        <member name="M:Raven.Abstractions.Data.QueryResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Abstractions.Data.QueryResult"/> class.
            </summary>
        </member>
        <member name="M:Raven.Abstractions.Data.QueryResult.EnsureSnapshot">
            <summary>
            Ensures that the query results can be used in snapshots
            </summary>
        </member>
        <member name="M:Raven.Abstractions.Data.QueryResult.CreateSnapshot">
            <summary>
            Creates a snapshot of the query results
            </summary>
        </member>
        <member name="P:Raven.Abstractions.Data.QueryResult.Results">
            <summary>
            Gets or sets the document resulting from this query.
            </summary>
            <value>The results.</value>
        </member>
        <member name="P:Raven.Abstractions.Data.QueryResult.Includes">
            <summary>
            Gets or sets the document included in the result.
            </summary>
            <value>The includes.</value>
        </member>
        <member name="P:Raven.Abstractions.Data.QueryResult.IsStale">
            <summary>
            Gets or sets a value indicating whether the index is stale.
            </summary>
            <value><c>true</c> if the index is stale; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Raven.Abstractions.Data.QueryResult.IndexTimestamp">
            <summary>
            The last time the index was updated.
            This can be used to determine the freshness of the data.
            </summary>
        </member>
        <member name="P:Raven.Abstractions.Data.QueryResult.TotalResults">
            <summary>
            Gets or sets the total results for this query
            </summary>
            <value>The total results.</value>
        </member>
        <member name="P:Raven.Abstractions.Data.QueryResult.SkippedResults">
            <summary>
            Gets or sets the skipped results (duplicate documents);
            </summary>
            <value>The skipped results.</value>
        </member>
        <member name="P:Raven.Abstractions.Data.QueryResult.IndexName">
            <summary>
            The index used to answer this query
            </summary>
        </member>
        <member name="P:Raven.Abstractions.Data.QueryResult.IndexEtag">
            <summary>
            The last etag indexed by the index.
            This can be used to determine whatever the results can be cached.
            </summary>
        </member>
        <member name="P:Raven.Abstractions.Data.QueryResult.ResultEtag">
            <summary>
            The ETag value for this index current state, which include what we docs we indexed,
            what document were deleted, etc.
            </summary>
        </member>
        <member name="P:Raven.Abstractions.Data.QueryResult.NonAuthoritativeInformation">
            <summary>
            Gets or sets a value indicating whether any of the documents returned by this query
            are non authoritative (modified by uncommitted transaction).
            </summary>
        </member>
        <member name="T:Raven.Abstractions.Indexing.SortOptions">
            <summary>
            The sort options to use for a particular field
            </summary>
        </member>
        <member name="F:Raven.Abstractions.Indexing.SortOptions.None">
            <summary>
            No sort options
            </summary>
        </member>
        <member name="F:Raven.Abstractions.Indexing.SortOptions.String">
            <summary>Sort using term values as Strings.  Sort values are String and lower
            values are at the front. 
            </summary>
        </member>
        <member name="F:Raven.Abstractions.Indexing.SortOptions.Int">
            <summary>Sort using term values as encoded Integers.  Sort values are Integer and
            lower values are at the front. 
            </summary>
        </member>
        <member name="F:Raven.Abstractions.Indexing.SortOptions.Float">
            <summary>Sort using term values as encoded Floats.  Sort values are Float and
            lower values are at the front. 
            </summary>
        </member>
        <member name="F:Raven.Abstractions.Indexing.SortOptions.Long">
            <summary>Sort using term values as encoded Longs.  Sort values are Long and
            lower values are at the front. 
            </summary>
        </member>
        <member name="F:Raven.Abstractions.Indexing.SortOptions.Double">
            <summary>Sort using term values as encoded Doubles.  Sort values are Double and
            lower values are at the front. 
            </summary>
        </member>
        <member name="F:Raven.Abstractions.Indexing.SortOptions.Short">
            <summary>Sort using term values as encoded Shorts.  Sort values are Short and
            lower values are at the front. 
            </summary>
        </member>
        <member name="F:Raven.Abstractions.Indexing.SortOptions.Custom">
            <summary>Sort using a custom Comparator.  Sort values are any Comparable and
            sorting is done according to natural order. 
            </summary>
        </member>
        <member name="F:Raven.Abstractions.Indexing.SortOptions.Byte">
            <summary>Sort using term values as encoded Bytes.  Sort values are Byte and
            lower values are at the front. 
            </summary>
        </member>
        <member name="F:Raven.Abstractions.Indexing.SortOptions.StringVal">
            <summary>Sort using term values as Strings, but comparing by
            value (using String.compareTo) for all comparisons.
            This is typically slower than {@link #STRING}, which
            uses ordinals to do the sorting. 
            </summary>
        </member>
        <member name="T:Raven.Abstractions.Replication.ReplicationDestination">
            <summary>
            Data class for replication destination documents
            </summary>
        </member>
        <member name="P:Raven.Abstractions.Replication.ReplicationDestination.ConnectionStringName">
            <summary>
            The name of the connection string specified in the 
            server configuration file. 
            Override all other properties of the destination
            </summary>
        </member>
        <member name="P:Raven.Abstractions.Replication.ReplicationDestination.Url">
            <summary>
            Gets or sets the URL of the replication destination
            </summary>
            <value>The URL.</value>
        </member>
        <member name="P:Raven.Abstractions.Replication.ReplicationDestination.Username">
            <summary>
            The replication server username to use
            </summary>
        </member>
        <member name="P:Raven.Abstractions.Replication.ReplicationDestination.Password">
            <summary>
            The replication server password to use
            </summary>
        </member>
        <member name="P:Raven.Abstractions.Replication.ReplicationDestination.Domain">
            <summary>
            The replication server domain to use
            </summary>
        </member>
        <member name="P:Raven.Abstractions.Replication.ReplicationDestination.ApiKey">
            <summary>
            The replication server api key to use
            </summary>
        </member>
        <member name="P:Raven.Abstractions.Replication.ReplicationDestination.Database">
            <summary>
            The database to use
            </summary>
        </member>
        <member name="P:Raven.Abstractions.Replication.ReplicationDestination.TransitiveReplicationBehavior">
            <summary>
            How should the replication bundle behave with respect to replicated documents.
            If a document was replicated to us from another node, should we replicate that to
            this destination, or should we replicate only documents that were locally modified.
            </summary>
        </member>
        <member name="T:Raven.Abstractions.Replication.TransitiveReplicationOptions">
            <summary>
            Options for how to replicate replicated documents
            </summary>
        </member>
        <member name="F:Raven.Abstractions.Replication.TransitiveReplicationOptions.None">
            <summary>
            Don't replicate replicated documents
            </summary>
        </member>
        <member name="F:Raven.Abstractions.Replication.TransitiveReplicationOptions.Replicate">
            <summary>
            Replicate replicated documents
            </summary>
        </member>
        <member name="T:Raven.Abstractions.Replication.ReplicationDocument">
            <summary>
            This class represent the list of replication destinations for the server
            </summary>
        </member>
        <member name="M:Raven.Abstractions.Replication.ReplicationDocument.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Raven.Abstractions.Replication.ReplicationDocument"/> class.
            </summary>
        </member>
        <member name="P:Raven.Abstractions.Replication.ReplicationDocument.Destinations">
            <summary>
            Gets or sets the list of replication destinations.
            </summary>
        </member>
        <member name="P:Raven.Abstractions.Replication.ReplicationDocument.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:Raven.Abstractions.Smuggler.SmugglerOptions.File">
            <summary>
            A file to write to when doing an export or read from when doing an import.
            </summary>
        </member>
        <member name="P:Raven.Abstractions.Smuggler.SmugglerOptions.OperateOnTypes">
            <summary>
            Specify the types to operate on. You can specify more than one type by combining items with the OR parameter.
            Default is all items.
            Usage example: OperateOnTypes = ItemType.Indexes | ItemType.Documents | ItemType.Attachments.
            </summary>
        </member>
    </members>
</doc>
