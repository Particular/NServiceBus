<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ninject.Extensions.ChildKernel</name>
    </assembly>
    <members>
        <member name="T:Ninject.Extensions.ChildKernel.ChildActivationCache">
            <summary>
            The activation cache of child kernels.
            </summary>
        </member>
        <member name="F:Ninject.Extensions.ChildKernel.ChildActivationCache.parentCache">
            <summary>
            The cache of the parent kernel.
            </summary>
        </member>
        <member name="M:Ninject.Extensions.ChildKernel.ChildActivationCache.#ctor(Ninject.IKernel)">
            <summary>
            Initializes a new instance of the <see cref="T:Ninject.Extensions.ChildKernel.ChildActivationCache"/> class.
            </summary>
            <param name="kernel">The kernel.</param>
        </member>
        <member name="M:Ninject.Extensions.ChildKernel.ChildActivationCache.Clear">
            <summary>
            Clears the cache.
            </summary>
        </member>
        <member name="M:Ninject.Extensions.ChildKernel.ChildActivationCache.AddActivatedInstance(System.Object)">
            <summary>
            Adds an activated instance.
            </summary>
            <param name="instance">The instance to be added.</param>
        </member>
        <member name="M:Ninject.Extensions.ChildKernel.ChildActivationCache.AddDeactivatedInstance(System.Object)">
            <summary>
            Adds an deactivated instance.
            </summary>
            <param name="instance">The instance to be added.</param>
        </member>
        <member name="M:Ninject.Extensions.ChildKernel.ChildActivationCache.IsActivated(System.Object)">
            <summary>
            Determines whether the specified instance is activated.
            </summary>
            <param name="instance">The instance.</param>
            <returns>
                <c>true</c> if the specified instance is activated; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Ninject.Extensions.ChildKernel.ChildActivationCache.IsDeactivated(System.Object)">
            <summary>
            Determines whether the specified instance is deactivated.
            </summary>
            <param name="instance">The instance.</param>
            <returns>
                <c>true</c> if the specified instance is deactivated; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Ninject.Extensions.ChildKernel.ChildKernel">
            <summary>
            This is a kernel with a parent kernel. Any binding that can not be resolved by this kernel is forwarded to the
            parent.
            </summary>
        </member>
        <member name="T:Ninject.Extensions.ChildKernel.IChildKernel">
            <summary>
            A kernel that has a parent for fall back.
            </summary>
        </member>
        <member name="P:Ninject.Extensions.ChildKernel.IChildKernel.ParentResolutionRoot">
            <summary>
            Gets the parent resolution root.
            </summary>
            <value>The parent resolution root.</value>
        </member>
        <member name="F:Ninject.Extensions.ChildKernel.ChildKernel.parent">
            <summary>
            The parent kernel.
            </summary>
        </member>
        <member name="M:Ninject.Extensions.ChildKernel.ChildKernel.#ctor(Ninject.Syntax.IResolutionRoot,Ninject.Modules.INinjectModule[])">
            <summary>
            Initializes a new instance of the <see cref="T:Ninject.Extensions.ChildKernel.ChildKernel"/> class.
            </summary>
            <param name="parent">The parent.</param>
            <param name="modules">The modules.</param>
        </member>
        <member name="M:Ninject.Extensions.ChildKernel.ChildKernel.#ctor(Ninject.Syntax.IResolutionRoot,Ninject.INinjectSettings,Ninject.Modules.INinjectModule[])">
            <summary>
            Initializes a new instance of the <see cref="T:Ninject.Extensions.ChildKernel.ChildKernel"/> class.
            </summary>
            <param name="parent">The parent.</param>
            <param name="settings">The settings.</param>
            <param name="modules">The modules.</param>
        </member>
        <member name="M:Ninject.Extensions.ChildKernel.ChildKernel.CanResolve(Ninject.Activation.IRequest)">
            <summary>
            Determines whether the specified request can be resolved.
            </summary>
            <param name="request">The request.</param>
            <returns>
                <c>True</c> if the request can be resolved; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Ninject.Extensions.ChildKernel.ChildKernel.Resolve(Ninject.Activation.IRequest)">
            <summary>
            Resolves instances for the specified request. The instances are not actually resolved
            until a consumer iterates over the enumerator.
            </summary>
            <param name="request">The request to resolve.</param>
            <returns>
            An enumerator of instances that match the request.
            </returns>
        </member>
        <member name="P:Ninject.Extensions.ChildKernel.ChildKernel.ParentResolutionRoot">
            <summary>
            Gets the parent resolution root.
            </summary>
            <value>The parent  resolution root.</value>
        </member>
    </members>
</doc>
