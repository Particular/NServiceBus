// == Source00.cs ======================================================================================================
using System.Threading;
using System.Threading.Tasks;
using NServiceBus;
using NServiceBus.Features;
using NServiceBus.Installation;
using NServiceBus.Sagas;

namespace UserCode;

public class Program
{
    public void Main()
    {
        var cfg = new EndpointConfiguration("UserCode");

        cfg.UseSourceGeneratedTypeDiscovery()
            .RegisterHandlersAndSagas();
    }
}

public class MyEvent : IEvent {}
public class MyCommand : ICommand {}
public class MyMessage : IMessage {}
public class MyFeature : Feature
{
    protected override void Setup(FeatureConfigurationContext context) { }
}
public class MyHandler : IHandleMessages<MyEvent>
{
    public Task Handle(MyEvent message, IMessageHandlerContext context) => Task.CompletedTask;
}
public class MySecondHandler : IHandleMessages<MyCommand>
{
    public Task Handle(MyCommand message, IMessageHandlerContext context) => Task.CompletedTask;
}
public class Installer : INeedToInstallSomething
{
    public Task Install(string identity, CancellationToken cancellationToken) => Task.CompletedTask;
}
public class NotInteresting { }

public class MySaga : Saga<MySagaData>
{
    protected override void ConfigureHowToFindSaga(SagaPropertyMapper<MySagaData> mapper) { }
}

public class MySagaData : ContainSagaData { }

public class MySagaNotFound : IHandleSagaNotFound
{
    public Task Handle(object message, IMessageProcessingContext context) => Task.CompletedTask;
}

// == NServiceBus.Core.Analyzer/NServiceBus.Core.SourceGen.KnownTypesGenerator/TypeRegistration.g.cs ===================
// <auto-generated/>
#nullable enable
namespace NServiceBus.Generated
{
    /// <summary>
    /// Source-generated registrations for types normally discovered by assembly scanning.
    /// </summary>
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    [NServiceBus.Extensibility.AutoGeneratedTypeRegistrationsAttribute]
    public static class GeneratedTypeRegistrations_Basic_ccbafe982105c50ae5bd
    {
        /// <summary>
        /// Registers types that are always discovered by assembly scanning.
        /// </summary>
        public static void RegisterRequiredTypes(NServiceBus.EndpointConfiguration config)
        {
            config.TypeRegistrations.RegisterExtensionType<NServiceBus.IEvent, UserCode.MyEvent>();
            config.TypeRegistrations.RegisterExtensionType<NServiceBus.IMessage, UserCode.MyEvent>();
            config.TypeRegistrations.RegisterExtensionType<NServiceBus.ICommand, UserCode.MyCommand>();
            config.TypeRegistrations.RegisterExtensionType<NServiceBus.IMessage, UserCode.MyCommand>();
            config.TypeRegistrations.RegisterExtensionType<NServiceBus.IMessage, UserCode.MyMessage>();
            config.TypeRegistrations.RegisterExtensionType<NServiceBus.Installation.INeedToInstallSomething, UserCode.Installer>();
            config.TypeRegistrations.RegisterExtensionType<NServiceBus.Sagas.IHandleSagaNotFound, UserCode.MySagaNotFound>();
        }

        /// <summary>
        /// Registers handlers/sagas that are not required to be present, allowing them to
        /// be registered manually.
        /// </summary>
        public static void RegisterOptionalTypes(NServiceBus.EndpointConfiguration config)
        {
            config.TypeRegistrations.RegisterExtensionType<NServiceBus.IHandleMessages, UserCode.MyHandler>();
            config.TypeRegistrations.RegisterExtensionType<NServiceBus.IHandleMessages, UserCode.MySecondHandler>();
            config.TypeRegistrations.RegisterExtensionType<NServiceBus.Saga, UserCode.MySaga>();
            config.TypeRegistrations.RegisterExtensionType<NServiceBus.IContainSagaData, UserCode.MySagaData>();
        }
    }

    // public static class TemporaryRegistrationExtensions
    // {
    //    public static void RegisterEvent<TType>(this NServiceBus.EndpointConfiguration config) where TType : NServiceBus.IEvent { }
    //    public static void RegisterMessage<TType>(this NServiceBus.EndpointConfiguration config) where TType : NServiceBus.IMessage { }
    //    public static void RegisterCommand<TType>(this NServiceBus.EndpointConfiguration config) where TType : NServiceBus.ICommand { }
    //    public static void RegisterHandler<TType>(this NServiceBus.EndpointConfiguration config) where TType : NServiceBus.IHandleMessages { }
    //    public static void RegisterInstaller<TType>(this NServiceBus.EndpointConfiguration config) where TType : NServiceBus.Installation.INeedToInstallSomething { }
    //    public static void RegisterSaga<TType>(this NServiceBus.EndpointConfiguration config) where TType : NServiceBus.Saga { }
    //    public static void RegisterSagaData<TType>(this NServiceBus.EndpointConfiguration config) where TType : NServiceBus.IContainSagaData { }
    //    public static void RegisterSagaNotFoundHandler<TType>(this NServiceBus.EndpointConfiguration config) where TType : NServiceBus.Sagas.IHandleSagaNotFound { }
    // }
}


// == NServiceBus.Core.Analyzer/NServiceBus.Core.SourceGen.AssemblyScanningGenerator/Interception.g.cs =================
// <auto-generated/>
#nullable enable

namespace System.Runtime.CompilerServices
{
    [global::System.Diagnostics.Conditional("DEBUG")]
    [global::System.AttributeUsage(global::System.AttributeTargets.Method, AllowMultiple = true)]
    sealed file class InterceptsLocationAttribute : global::System.Attribute
    {
        public InterceptsLocationAttribute(int version, string data)
        {
            _ = version;
            _ = data;
        }
    }
}

namespace NServiceBus
{
    static file class SourceGeneratedAssemblyScanningInterceptors
    {
        [global::System.Runtime.CompilerServices.InterceptsLocation(1, "Ltutow3dbm1UTnY354APki4BAABTb3VyY2UwMC5jcw==")] // Source00.cs(16,13)
        public static void UseSourceGeneratedTypeDiscovery(NServiceBus.EndpointConfiguration endpointConfiguration)
        {
            NServiceBus.Generated.GeneratedTypeRegistrations_Basic_ccbafe982105c50ae5bd.RegisterRequiredTypes(endpointConfiguration);
        }
        [global::System.Runtime.CompilerServices.InterceptsLocation(1, "Ltutow3dbm1UTnY354APkl0BAABTb3VyY2UwMC5jcw==")] // Source00.cs(17,14)
        public static void RegisterHandlersAndSagas(NServiceBus.SourceGenerationTypeDiscoveryOptions options)
        {
            NServiceBus.Generated.GeneratedTypeRegistrations_Basic_ccbafe982105c50ae5bd.RegisterOptionalTypes(options.Configuration);
        }
    }
}

