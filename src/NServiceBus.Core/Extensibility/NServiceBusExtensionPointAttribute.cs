#nullable enable

namespace NServiceBus.Extensibility;

using System;
using System.ComponentModel;

/// <summary>
/// Identifies an additional NServiceBus extension type. Type scanning, whether at runtime via assembly scanning
/// or at compile time via source generation, will find all non-abstract implementors of the decorated type.
/// </summary>
[AttributeUsage(AttributeTargets.Class | AttributeTargets.Interface, AllowMultiple = false, Inherited = false)]
public sealed class NServiceBusExtensionPointAttribute : Attribute
{
    /// <summary>
    /// Identifies an additional NServiceBus extension type. Type scanning, whether at runtime via assembly scanning
    /// or at compile time via source generation, will find all non-abstract implementors of the decorated type.
    /// </summary>
    /// <param name="registrationMethodName">
    /// The method on <see cref="TypeRegistrations" /> to call when registering a type.
    /// </param>
    /// <param name="autoRegister">
    /// True to automatically register this type for all endpoints, False for extension points like
    /// message handlers and sagas which need to be manually registered for multi-endpoint hosting.
    /// </param>
    public NServiceBusExtensionPointAttribute(string registrationMethodName, bool autoRegister)
    {
        _ = registrationMethodName;
        _ = autoRegister;
    }
}

/// <summary>
/// This attribute is used by source generators to identify type registration classes, so that
/// a final compilation can find and execute the registration methods on all type registration
/// classes.
/// </summary>
[AttributeUsage(AttributeTargets.Class, AllowMultiple = false, Inherited = false)]
[EditorBrowsable(EditorBrowsableState.Never)]
public sealed class AutoGeneratedTypeRegistrationsAttribute : Attribute
{
}
